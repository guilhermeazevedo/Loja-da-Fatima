/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.lojadafatima.InterfacesPessoa;

import br.com.lojadafatima.ClassesFerramentas.ClasseDatas;
import br.com.lojadafatima.ClassesFerramentas.GerenciadorCamposBotoes;
import br.com.lojadafatima.ClassesFerramentas.LimpaCamposTela;
import br.com.lojadafatima.ClassesFerramentas.PermiteApenasNumeros;
import br.com.lojadafatima.ClassesFerramentas.PermiteNumerosPontoBarra;
import br.com.lojadafatima.ClassesFerramentas.Preenche;
import br.com.lojadafatima.ClassesFerramentas.TeclasPermitidas;
import br.com.lojadafatima.DadosPessoa.ClassePessoaFisica;
import br.com.lojadafatima.DadosPessoa.ClassePessoaJuridica;
import br.com.lojadafatima.Pessoa.ClasseCliente;
import br.com.lojadafatima.Usuario.ClasseTelasUsuario;
import java.awt.Color;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author hp
 */
public class InterfaceCliente extends javax.swing.JDialog {

    MaskFormatter data, rg, cpf, cnpj, cep, fone;
    private java.awt.Frame primeiratela;
    private ClasseTelasUsuario telasusuario = new ClasseTelasUsuario();
    Preenche preenche = new Preenche();
    ClasseCliente cliente = new ClasseCliente();
    GerenciadorCamposBotoes valida = new GerenciadorCamposBotoes();
    LimpaCamposTela limpar = new LimpaCamposTela();
    ClasseDatas datas = new ClasseDatas();

    /**
     * Creates new form InterfaceCliente
     */
    public InterfaceCliente(java.awt.Frame telaorigem, boolean modal, ClasseTelasUsuario usuario) {
        super(telaorigem, modal);
        setPrimeiratela(telaorigem);
        initComponents();
        setTelasusuario(usuario);
        analisausuario();
        RbPeFisicaActionPerformed(null);
        TfNrCNPJKeyReleased(null);
        TfNrCPFKeyReleased(null);
        preenche.PreencheJComboBox(CbEstado, cliente.getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        TfNumero.setDocument(new TeclasPermitidas());
        valida.validacamposCancelar(PnCadastro, PnBotoes);
        CbPesquisaActionPerformed(null);
        setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        PopupMenuRetorna = new javax.swing.JPopupMenu();
        MnItRetorna = new javax.swing.JMenuItem();
        TabbedPaneCliente = new javax.swing.JTabbedPane();
        PnCadastro = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TfNomeFisica = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        RbMasculino = new javax.swing.JRadioButton();
        RbFeminino = new javax.swing.JRadioButton();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtNasc = new JFormattedTextField(data);
        jLabel15 = new javax.swing.JLabel();
        try{
            rg = new MaskFormatter("##.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrRG = new JFormattedTextField(rg);
        jLabel5 = new javax.swing.JLabel();
        try{
            cpf = new MaskFormatter("###.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrCPF = new JFormattedTextField(cpf);
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RbPeFisica = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        TfCodigo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        RbPeJuridica = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        TfNomeFantasia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TfRazaoSocial = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        try{
            cnpj = new MaskFormatter("##.###.###/####-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrCNPJ = new JFormattedTextField(cnpj);
        jLabel16 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtFund = new JFormattedTextField(data);
        jLabel14 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtCadastro = new JFormattedTextField(data);
        jLabel10 = new javax.swing.JLabel();
        TfLogradouro = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TfNumero = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        TfBairro = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        CbEstado = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        CbCidade = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        try{
            fone = new MaskFormatter("(##)####-####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrTelefone = new JFormattedTextField(fone);
        jLabel20 = new javax.swing.JLabel();
        jCbOpTelefone = new javax.swing.JComboBox();
        jBtAddTelefone = new javax.swing.JButton();
        jBtDelTelefone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbTelefone = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        TfDsEmail = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jCbOpEmail = new javax.swing.JComboBox();
        jBtAddEmail = new javax.swing.JButton();
        jBtDelEmail = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbEmail = new javax.swing.JTable();
        PnBotoes = new javax.swing.JPanel();
        BtGravar = new javax.swing.JButton();
        BtAlterar = new javax.swing.JButton();
        BtIncluir = new javax.swing.JButton();
        BtExcluir = new javax.swing.JButton();
        BtCancelar = new javax.swing.JButton();
        BtCadEstado = new javax.swing.JButton();
        BtCadCidade = new javax.swing.JButton();
        try{
            cep = new MaskFormatter("#####-###");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfCEP = new JFormattedTextField(cep);
        LbCPFValido = new javax.swing.JLabel();
        LbCNPJValido = new javax.swing.JLabel();
        PnConsulta = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        CbPesquisa = new javax.swing.JComboBox();
        CbPesquisa2 = new javax.swing.JComboBox();
        TfPesquisa = new javax.swing.JTextField();
        BtPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbPesquisa = new javax.swing.JTable();

        MnItRetorna.setText("Carregar dados");
        MnItRetorna.setComponentPopupMenu(PopupMenuRetorna);
        MnItRetorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItRetornaActionPerformed(evt);
            }
        });
        PopupMenuRetorna.add(MnItRetorna);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cliente - Software Loja da FÃ¡tima");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel3.setText("Nome*");

        TfNomeFisica.setName("NM_PESSOA"); // NOI18N
        TfNomeFisica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNomeFisicaKeyTyped(evt);
            }
        });

        jLabel4.setText("Sexo*");

        buttonGroup2.add(RbMasculino);
        RbMasculino.setSelected(true);
        RbMasculino.setText("Masculino");

        buttonGroup2.add(RbFeminino);
        RbFeminino.setText("Feminino");

        TfDtNasc.setName("DT_NASC"); // NOI18N
        TfDtNasc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfDtNascFocusLost(evt);
            }
        });

        jLabel15.setText("Data de Nascimento*");

        TfNrRG.setName("NR_RG"); // NOI18N
        TfNrRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrRGFocusLost(evt);
            }
        });

        jLabel5.setText("NÂº RG");

        TfNrCPF.setName("NR_CPF"); // NOI18N
        TfNrCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrCPFFocusLost(evt);
            }
        });
        TfNrCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyTyped(evt);
            }
        });

        jLabel6.setText("NÂº CPF*");

        jLabel2.setText("Tipo de Pessoa");

        buttonGroup1.add(RbPeFisica);
        RbPeFisica.setSelected(true);
        RbPeFisica.setText("FÃ­sica");
        RbPeFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbPeFisicaActionPerformed(evt);
            }
        });

        jLabel1.setText("CÃ³digo");

        TfCodigo.setEditable(false);
        TfCodigo.setName("CD_PESSOA"); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buttonGroup1.add(RbPeJuridica);
        RbPeJuridica.setText("JurÃ­dica");
        RbPeJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbPeJuridicaActionPerformed(evt);
            }
        });

        jLabel7.setText("Nome Fantasia*");

        TfNomeFantasia.setName("NM_FANTASIA"); // NOI18N
        TfNomeFantasia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNomeFantasiaKeyTyped(evt);
            }
        });

        jLabel8.setText("Razao Social");

        TfRazaoSocial.setName("DS_RAZAO_SOCIAL"); // NOI18N
        TfRazaoSocial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfRazaoSocialKeyTyped(evt);
            }
        });

        jLabel9.setText("Nr. CNPJ*");

        TfNrCNPJ.setName("NR_CNPJ"); // NOI18N
        TfNrCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrCNPJFocusLost(evt);
            }
        });
        TfNrCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TfNrCNPJKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNrCNPJKeyTyped(evt);
            }
        });

        jLabel16.setText("Data de FundaÃ§Ã£o");

        TfDtFund.setName("DT_NASC"); // NOI18N
        TfDtFund.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfDtFundFocusLost(evt);
            }
        });

        jLabel14.setText("Data do Cadastro");

        TfDtCadastro.setEditable(false);
        TfDtCadastro.setName("DT_CADASTRO"); // NOI18N

        jLabel10.setText("Rua/Avenida*");

        TfLogradouro.setName("DS_RUA"); // NOI18N
        TfLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfLogradouroKeyTyped(evt);
            }
        });

        jLabel11.setText("Numero*");

        TfNumero.setName("DS_NUMERO"); // NOI18N
        TfNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNumeroKeyTyped(evt);
            }
        });

        jLabel12.setText("Bairro*");

        TfBairro.setName("DS_BAIRRO"); // NOI18N
        TfBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfBairroKeyTyped(evt);
            }
        });

        jLabel13.setText("CEP*");

        jLabel17.setText("Estado*");

        CbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbEstadoActionPerformed(evt);
            }
        });

        jLabel18.setText("Cidade*");

        CbCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbCidadeActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel23.setText("Nr. Telefone:");

        TfNrTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrTelefoneFocusLost(evt);
            }
        });

        jLabel20.setText("Tipo");

        jCbOpTelefone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "CELULAR", "ALTERNATIVO" }));

        jBtAddTelefone.setText("Adicionar");
        jBtAddTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddTelefoneActionPerformed(evt);
            }
        });

        jBtDelTelefone.setText("Excluir");
        jBtDelTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelTelefoneActionPerformed(evt);
            }
        });

        TbTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Nr. Telefone", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbTelefone.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TbTelefone);

        jLabel24.setText("E-mail");

        TfDsEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfDsEmailKeyTyped(evt);
            }
        });

        jLabel25.setText("Tipo");

        jCbOpEmail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "ALTERNATIVO" }));

        jBtAddEmail.setText("Adicionar");
        jBtAddEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddEmailActionPerformed(evt);
            }
        });

        jBtDelEmail.setText("Excluir");
        jBtDelEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelEmailActionPerformed(evt);
            }
        });

        TbEmail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "E-mail", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbEmail.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(TbEmail);

        BtGravar.setText("Gravar");
        BtGravar.setName("Gravar"); // NOI18N
        BtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGravarActionPerformed(evt);
            }
        });

        BtAlterar.setText("Alterar Dados");
        BtAlterar.setName("Alterar"); // NOI18N
        BtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAlterarActionPerformed(evt);
            }
        });

        BtIncluir.setText("Cadastrar Cliente");
        BtIncluir.setName("Incluir"); // NOI18N
        BtIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtIncluirActionPerformed(evt);
            }
        });

        BtExcluir.setText("Excluir Cliente");
        BtExcluir.setName("Excluir"); // NOI18N
        BtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcluirActionPerformed(evt);
            }
        });

        BtCancelar.setText("Cancelar");
        BtCancelar.setName("Cancelar"); // NOI18N
        BtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnBotoesLayout = new javax.swing.GroupLayout(PnBotoes);
        PnBotoes.setLayout(PnBotoesLayout);
        PnBotoesLayout.setHorizontalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnBotoesLayout.createSequentialGroup()
                .addComponent(BtIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(BtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PnBotoesLayout.setVerticalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
            .addComponent(BtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        BtCadEstado.setText("Adicionar Estado");
        BtCadEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadEstadoActionPerformed(evt);
            }
        });

        BtCadCidade.setText("Adicionar Cidade");
        BtCadCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadCidadeActionPerformed(evt);
            }
        });

        TfCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfCEPFocusLost(evt);
            }
        });

        LbCPFValido.setText("Informa CPF valido");

        LbCNPJValido.setText("Informa CNPJ valido");

        javax.swing.GroupLayout PnCadastroLayout = new javax.swing.GroupLayout(PnCadastro);
        PnCadastro.setLayout(PnCadastroLayout);
        PnCadastroLayout.setHorizontalGroup(
            PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PnBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addComponent(TfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addComponent(TfDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                                        .addComponent(RbPeFisica))))
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(TfNomeFisica, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                                        .addComponent(RbMasculino)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(RbFeminino))
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel15))
                                                .addGap(18, 18, 18)
                                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(LbCPFValido)
                                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(TfNrCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel6))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel5)
                                                            .addComponent(TfNrRG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                    .addComponent(TfDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RbPeJuridica)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TfNrCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(LbCNPJValido))
                                        .addGap(18, 18, 18)
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(TfDtFund, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(146, 146, 146))
                            .addComponent(TfNomeFantasia)
                            .addComponent(TfRazaoSocial)))
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(315, 315, 315)
                        .addComponent(jLabel2))
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17)
                            .addComponent(TfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PnCadastroLayout.createSequentialGroup()
                                    .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(31, 31, 31)
                                    .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(BtCadCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BtCadEstado)))
                                .addGroup(PnCadastroLayout.createSequentialGroup()
                                    .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TfBairro, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PnCadastroLayout.createSequentialGroup()
                                            .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(TfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel11))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13)
                                                .addComponent(TfCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(22, 22, 22)))
                            .addComponent(jLabel18))
                        .addGap(30, 30, 30)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(PnCadastroLayout.createSequentialGroup()
                                    .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel24)
                                        .addComponent(jLabel25))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PnCadastroLayout.createSequentialGroup()
                                    .addComponent(jBtAddEmail)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtDelEmail)))
                            .addComponent(jLabel23)
                            .addComponent(jLabel20)
                            .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jCbOpEmail, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TfDsEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PnCadastroLayout.createSequentialGroup()
                                    .addComponent(jBtAddTelefone)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtDelTelefone))
                                .addComponent(jCbOpTelefone, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TfNrTelefone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PnCadastroLayout.setVerticalGroup(
            PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RbPeFisica)
                            .addComponent(TfDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfNomeFisica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(3, 3, 3)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RbMasculino)
                            .addComponent(RbFeminino)
                            .addComponent(TfNrCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TfNrRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(LbCPFValido))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addComponent(RbPeJuridica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TfNrCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TfDtFund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LbCNPJValido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfNrTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCbOpTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBtAddTelefone)
                                    .addComponent(jBtDelTelefone)))
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(TfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TfCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtCadEstado))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtCadCidade)))
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfDsEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCbOpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBtAddEmail)
                                    .addComponent(jBtDelEmail)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator3))
                .addGap(18, 18, 18)
                .addComponent(PnBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabbedPaneCliente.addTab("Cadastro", PnCadastro);

        jLabel19.setText("Filtro da Pesquisa");

        CbPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Codigo", "Nome/Nome Fantasia", "CPF/CNPJ" }));
        CbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbPesquisaActionPerformed(evt);
            }
        });

        TfPesquisa.setEditable(false);

        BtPesquisa.setText("Pesquisar");
        BtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtPesquisaActionPerformed(evt);
            }
        });

        TbPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome/Nome Fantasia", "CPF/CNPJ", "Data do Cadastro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbPesquisa.setComponentPopupMenu(PopupMenuRetorna);
        TbPesquisa.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TbPesquisa);

        javax.swing.GroupLayout PnConsultaLayout = new javax.swing.GroupLayout(PnConsulta);
        PnConsulta.setLayout(PnConsultaLayout);
        PnConsultaLayout.setHorizontalGroup(
            PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CbPesquisa2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CbPesquisa, 0, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnConsultaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        PnConsultaLayout.setVerticalGroup(
            PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CbPesquisa2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(493, Short.MAX_VALUE))
            .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnConsultaLayout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
        );

        TabbedPaneCliente.addTab("Consulta", PnConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneCliente)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneCliente)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RbPeFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbPeFisicaActionPerformed
        LiberaCamposFouJ(true);
    }//GEN-LAST:event_RbPeFisicaActionPerformed

    private void RbPeJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbPeJuridicaActionPerformed
        LiberaCamposFouJ(false);
    }//GEN-LAST:event_RbPeJuridicaActionPerformed

    private void jBtAddTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddTelefoneActionPerformed
        if(valida.CampoTotalmentePreenchido(TfNrTelefone.getText()))
        preenche.PreencheJTableEmailOuTelefone(TfNrTelefone, jCbOpTelefone, TbTelefone);
        else
            JOptionPane.showMessageDialog(null, "Digite o numero do telefone corretamente!", "Digite corretamente", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jBtAddTelefoneActionPerformed

    private void jBtDelTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelTelefoneActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbTelefone);
    }//GEN-LAST:event_jBtDelTelefoneActionPerformed

    private void jBtAddEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddEmailActionPerformed
        preenche.PreencheJTableEmailOuTelefone(TfDsEmail, jCbOpEmail, TbEmail);
    }//GEN-LAST:event_jBtAddEmailActionPerformed

    private void jBtDelEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelEmailActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbEmail);
    }//GEN-LAST:event_jBtDelEmailActionPerformed

    private void CbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbPesquisaActionPerformed
        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                CbPesquisa2.setEnabled(true);
                TfPesquisa.setEditable(false);
                CbPesquisa2.removeAllItems();
                CbPesquisa2.addItem("");
                CbPesquisa2.addItem("Pessoa Fisica");
                CbPesquisa2.addItem("Pessoa Juridica");
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 1: {
                CbPesquisa2.setEnabled(false);
                TfPesquisa.setEditable(true);
                CbPesquisa2.removeAllItems();
                CbPesquisa2.addItem("");
                TfPesquisa.setDocument(new PermiteApenasNumeros());
                break;
            }
            case 2: {
                CbPesquisa2.setEnabled(true);
                TfPesquisa.setEditable(true);
                CbPesquisa2.removeAllItems();
                CbPesquisa2.addItem("");
                CbPesquisa2.addItem("Pessoa Fisica");
                CbPesquisa2.addItem("Pessoa Juridica");
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 3: {
                CbPesquisa2.setEnabled(true);
                TfPesquisa.setEditable(true);
                CbPesquisa2.removeAllItems();
                CbPesquisa2.addItem("");
                CbPesquisa2.addItem("CPF");
                CbPesquisa2.addItem("CNPJ");
                TfPesquisa.setDocument(new PermiteNumerosPontoBarra());
                break;
            }
        }
    }//GEN-LAST:event_CbPesquisaActionPerformed

    private void BtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtPesquisaActionPerformed
        int[] parametro = new int[4];
        parametro[0] = 70;
        parametro[1] = 300;
        parametro[2] = 100;
        parametro[3] = 70;
        preenche.FormataJtable(TbPesquisa, parametro);

        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                switch (CbPesquisa2.getSelectedIndex()) {
                    case 0: {
                        preenche.PreencherJtable(TbPesquisa, cliente.consultageral());
                        break;
                    }
                    case 1: {
                        preenche.PreencherJtable(TbPesquisa, cliente.consultageralpessoafisica());
                        break;
                    }
                    case 2: {
                        preenche.PreencherJtable(TbPesquisa, cliente.consultageralpessoajuridica());
                        break;
                    }
                }
                break;
            }
            case 1: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o Codigo do cliente que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    cliente.setCodigo(Integer.parseInt(TfPesquisa.getText()));
                    preenche.PreencherJtable(TbPesquisa, cliente.consultacodigo());
                }
                break;
            }
            case 2: {
                switch (CbPesquisa2.getSelectedIndex()) {
                    case 0: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o Nome/Nome Fantasia do cliente que deseja consultar!", "Digite o nome", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultadescricaogeral(TfPesquisa.getText().toUpperCase()));
                        }
                        break;
                    }
                    case 1: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o Nome do cliente que deseja consultar!", "Digite o nome", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultadescricaofisica(TfPesquisa.getText().toUpperCase()));
                        }
                        break;
                    }
                    case 2: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o Nome Fantasia do cliente que deseja consultar!", "Digite o nome", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultadescricaojuridica(TfPesquisa.getText().toUpperCase()));
                        }
                        break;
                    }
                }
                break;
            }
            case 3: {
                switch (CbPesquisa2.getSelectedIndex()) {
                    case 0: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o CPF/CNPJ do cliente que deseja consultar!", "Digite o CPF/CNPJ", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultaCPFouCNPJ(TfPesquisa.getText()));
                        }
                        break;
                    }
                    case 1: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o CPF do cliente que deseja consultar!", "Digite o CPF", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultaCPF(TfPesquisa.getText()));
                        }
                        break;
                    }
                    case 2: {
                        if (TfPesquisa.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Digite o CNPJ do cliente que deseja consultar!", "Digite o CNPJ", JOptionPane.INFORMATION_MESSAGE);
                            TfPesquisa.grabFocus();
                        } else {
                            preenche.PreencherJtable(TbPesquisa, cliente.consultaCNPJ(TfPesquisa.getText()));
                        }
                        break;
                    }
                }
                break;
            }
        }
    }//GEN-LAST:event_BtPesquisaActionPerformed

    private void CbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbEstadoActionPerformed
        if (CbEstado.getSelectedItem() == null) {
            preenche.PreencheJComboBox(CbEstado, cliente.getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        }
        cliente.getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        preenche.PreencheJComboBox(CbCidade, cliente.getPessoa().getEndereco().getCidade().buscarcidadesporestado());
    }//GEN-LAST:event_CbEstadoActionPerformed

    private void BtCadEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadEstadoActionPerformed
        final InterfaceEstado tela = new InterfaceEstado(getPrimeiratela(), true, getTelasusuario());
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                preenche.PreencheJComboBox(CbEstado, cliente.getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
            }
        });
    }//GEN-LAST:event_BtCadEstadoActionPerformed

    private void BtCadCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadCidadeActionPerformed
        final InterfaceCidade tela = new InterfaceCidade(getPrimeiratela(), true, getTelasusuario());
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                CbEstadoActionPerformed(null);
            }
        });
    }//GEN-LAST:event_BtCadCidadeActionPerformed

    private void TfCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfCEPFocusLost
        valida.FocusLostDeCamposFormatados(TfCEP);
    }//GEN-LAST:event_TfCEPFocusLost

    private void TfNrCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrCPFFocusLost
        ClassePessoaFisica fisica = new ClassePessoaFisica();
        fisica.setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(fisica.getCpf())) {
            if (!fisica.CPFnumerosiguais()) {
                if (fisica.CPFvalido()) {
                    LbCPFValido.setText("Valido");
                    LbCPFValido.setForeground(Color.green);
                    if (fisica.CPFexistente()) {
                        if (cliente.eclienteCPF(fisica.getCpf())) {
                            if (!TfCodigo.getText().equals("") && (cliente.getCodigo() == Integer.parseInt(TfCodigo.getText()))){
                                
                            } else
                            if (cliente.eativo()) {
                                JOptionPane.showMessageDialog(null, "Este CPF pertence a um cliente ja cadastrado no sistema!\n"
                                        + "Consulte os dados deste cliente na aba \"Consulta\" e informe o codigo ao cliente, caso ele tenha esquecido!", "CPF existente", JOptionPane.INFORMATION_MESSAGE);
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            } else {
                                int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + fisica.retornanomeporCPF() + ". "
                                        + "Os dados desta pessoa foram excluidas do sistema!\n\n"
                                        + "Deseja recuperar os dados desta pessoa?", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                                if (op == JOptionPane.YES_OPTION) {
                                    cliente.recuperar();
                                    JOptionPane.showMessageDialog(null, "Recuperacao realizada com sucesso!\nAs informacoes do cliente permanecem iguais as que estavam cadastradas no momento da exclusao\n\n"
                                            + "Codigo: " + cliente.getCodigo() + "\nNome: " + fisica.retornanomeporCPF(), "Recuperacao realizada com sucesso", JOptionPane.INFORMATION_MESSAGE);
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    TfNrCNPJKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                } else {
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                }
                            }
                        } else {
                            int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + fisica.retornanomeporCPF() + ". "
                                    + "Os dados desta pessoa estao cadastrados no sistema!\n\n"
                                    + "Deseja importar os dados desta pessoa para criar um novo cliente?\n"
                                    + "(Caso queira, o cliente sera criado automaticamente com as informacoes contidas no sistema)", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                            if (op == JOptionPane.YES_OPTION) {
                                cliente.importardadosnovoclienteCPF(fisica.getCpf());
                                JOptionPane.showMessageDialog(null, "Importacao dos dados realizada com sucesso!\n"
                                        + "Um novo cliente esta gravado no sistema com as informacoes contidas no CPF da pessoa.\n"
                                        + "Caso deseja conferir ou alterar os dados do cliente, faca a busca na aba \"Consulta\".\n\n"
                                        + "Codigo: " + cliente.getCodigo() + "\nNome: " + fisica.retornanomeporCPF());
                                limpar.Limpar(PnCadastro);
                                limpar.Limpar(TbTelefone);
                                limpar.Limpar(TbEmail);
                                limpar.Limpar(TbPesquisa);
                                TfNrCPFKeyReleased(null);
                                TfNrCNPJKeyReleased(null);
                                valida.validacamposCancelar(PnCadastro, PnBotoes);
                            } else {
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            }
                        }
                    }
                } else {
                    LbCPFValido.setText("CPF Invalido");
                    LbCPFValido.setForeground(Color.red);
                }
            } else {
                LbCPFValido.setText("Numeros Iguais");
                LbCPFValido.setForeground(Color.red);
            }
        } else {
            LbCPFValido.setText("EspaÃ§os em Branco");
            LbCPFValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCPFFocusLost

    private void TfNrRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrRGFocusLost
        valida.FocusLostDeCamposFormatados(TfNrRG);
    }//GEN-LAST:event_TfNrRGFocusLost

    private void TfDtNascFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfDtNascFocusLost
        if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
            if (datas.validadatas(TfDtNasc.getText())) {

            } else {
                TfDtNasc.setValue(null);
            }
        }
    }//GEN-LAST:event_TfDtNascFocusLost

    private void TfNrCNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrCNPJFocusLost
        ClassePessoaJuridica juridica = new ClassePessoaJuridica();
        valida.FocusLostDeCamposFormatados(TfNrCNPJ);
        juridica.setCnpj(TfNrCNPJ.getText());
        if (valida.CampoTotalmentePreenchido(juridica.getCnpj())) {
            if (!juridica.CNPJnumerosiguais()) {
                if (juridica.CNPJvalido()) {
                    LbCNPJValido.setText("Valido");
                    LbCNPJValido.setForeground(Color.green);
                    if (juridica.CNPJexistente()) {
                        if (cliente.eclienteCNPJ(juridica.getCnpj())) {
                            if (!TfCodigo.getText().equals("") && (cliente.getCodigo() == Integer.parseInt(TfCodigo.getText()))){
                                
                            }else
                            if (cliente.eativo()) {
                                JOptionPane.showMessageDialog(null, "Este CNPJ pertence a um cliente ja cadastrado no sistema!\n"
                                        + "Consulte os dados deste cliente na aba \"Consulta\" e informe o codigo ao cliente, caso ele tenha esquecido!", "CNPJ existente", JOptionPane.INFORMATION_MESSAGE);
                                TfNrCNPJ.setText("");
                                TfNrCNPJKeyReleased(null);
                            } else {
                                int op = JOptionPane.showConfirmDialog(null, "Este CNPJ pertence a " + juridica.retornanomeporCNPJ() + ". "
                                        + "Os dados desta empresa foram excluidas do sistema!\n\n"
                                        + "Deseja recuperar os dados desta empresa?", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                                if (op == JOptionPane.YES_OPTION) {
                                    cliente.recuperar();
                                    JOptionPane.showMessageDialog(null, "Recuperacao realizada com sucesso!\nAs informacoes do cliente permanecem iguais as que estavam cadastradas no momento da exclusao\n\n"
                                            + "Codigo: " + cliente.getCodigo() + "\nNome: " + juridica.retornanomeporCNPJ(), "Recuperacao realizada com sucesso", JOptionPane.INFORMATION_MESSAGE);
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    TfNrCNPJKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                } else {
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                }
                            }
                        } else {
                            int op = JOptionPane.showConfirmDialog(null, "Este CNPJ pertence a " + juridica.retornanomeporCNPJ() + ". "
                                    + "Os dados desta empresa estao cadastrados no sistema!\n\n"
                                    + "Deseja importar os dados desta empresa para criar um novo cliente?\n"
                                    + "(Caso queira, o cliente sera criado automaticamente com as informacoes contidas no sistema)", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                            if (op == JOptionPane.YES_OPTION) {
                                cliente.importardadosnovoclienteCNPJ(juridica.getCnpj());
                                JOptionPane.showMessageDialog(null, "Importacao dos dados realizada com sucesso!\n"
                                        + "Um novo cliente esta gravado no sistema com as informacoes contidas no CNPJ da empresa.\n"
                                        + "Caso deseja conferir ou alterar os dados do cliente, faca a busca na aba \"Consulta\".\n\n"
                                        + "Codigo: " + cliente.getCodigo() + "\nNome: " + juridica.retornanomeporCNPJ());
                                limpar.Limpar(PnCadastro);
                                limpar.Limpar(TbTelefone);
                                limpar.Limpar(TbEmail);
                                limpar.Limpar(TbPesquisa);
                                TfNrCPFKeyReleased(null);
                                TfNrCNPJKeyReleased(null);
                                valida.validacamposCancelar(PnCadastro, PnBotoes);
                            } else {
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            }
                        }
                    }
                } else {
                    LbCNPJValido.setText("CNPJ Invalido");
                    LbCNPJValido.setForeground(Color.red);
                }
            } else {
                LbCNPJValido.setText("Numeros Iguais");
                LbCNPJValido.setForeground(Color.red);
            }
        } else {
            LbCNPJValido.setText("EspaÃ§os em Branco");
            LbCNPJValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCNPJFocusLost

    private void TfDtFundFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfDtFundFocusLost
        if (valida.CampoTotalmentePreenchido(TfDtFund.getText())) {
            if (datas.validadatas(TfDtFund.getText())) {

            } else {
                TfDtFund.setValue(null);
            }
        }
    }//GEN-LAST:event_TfDtFundFocusLost

    private void TfNrTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrTelefoneFocusLost
        valida.FocusLostDeCamposFormatados(TfNrTelefone);
    }//GEN-LAST:event_TfNrTelefoneFocusLost

    private void BtIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtIncluirActionPerformed
        valida.validacamposCadastrar(PnCadastro, PnBotoes);
        limpar.Limpar(PnCadastro);
        limpar.Limpar(TbTelefone);
        limpar.Limpar(TbEmail);
        preenche.PreencheJComboBox(CbEstado, cliente.getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        RbPeFisica.setSelected(true);
        RbPeFisicaActionPerformed(evt);
        TfDtCadastro.setText(datas.retornaratartual());
        TfNrCPFKeyReleased(null);
        TfNrCNPJKeyReleased(null);
    }//GEN-LAST:event_BtIncluirActionPerformed

    private void BtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAlterarActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Cliente na Aba \"Consulta\" e selecione a opÃ§Ã£o \"Carregar Dados\" apÃ³s selecionar e\nclicar com o botÃ£o direito sobre os dados do cliente para que a opÃ§Ã£o de Alterar os Dados seja realizada!", "Consulte um Cliente", JOptionPane.INFORMATION_MESSAGE);
            TabbedPaneCliente.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            valida.validacamposCadastrar(PnCadastro, PnBotoes);
            if (RbPeFisica.isSelected()) {
                cliente.getPessoa().setTipopessoa("F");
            } else {
                cliente.getPessoa().setTipopessoa("J");
            }
        }
    }//GEN-LAST:event_BtAlterarActionPerformed

    private void BtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcluirActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Cliente na Aba \"Consulta\" e selecione a opÃ§Ã£o \"Carregar Dados\" apÃ³s selecionar e\nclicar com o botÃ£o direito sobre os dados do cliente para que a opÃ§Ã£o de Excluir os Dados seja realizada!", "Consulte um Cliente", JOptionPane.INFORMATION_MESSAGE);
            TabbedPaneCliente.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            if (JOptionPane.showConfirmDialog(null, "Voce tem certeza que deseja EXCLUIR os dados deste Cliente?", "Deseja excluir?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                cliente.setCodigo(Integer.parseInt(TfCodigo.getText()));
                cliente.excluir();
                limpar.Limpar(PnCadastro);
                limpar.Limpar(TbTelefone);
                limpar.Limpar(TbEmail);
                valida.validacamposCancelar(PnCadastro, PnBotoes);
                TfNrCPFKeyReleased(null);
                TfNrCNPJKeyReleased(null);
                BtPesquisaActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_BtExcluirActionPerformed

    private void BtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Deseja realmente Cancelar esta operaÃ§Ã£o?\n(TODOS os dados na tela serÃ£o limpos)", "Confirmar aÃ§Ã£o", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpar.Limpar(PnCadastro);
            limpar.Limpar(TbTelefone);
            limpar.Limpar(TbEmail);
            TfNrCPFKeyReleased(null);
            TfNrCNPJKeyReleased(null);
            valida.validacamposCancelar(PnCadastro, PnBotoes);
        }
    }//GEN-LAST:event_BtCancelarActionPerformed

    private void BtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGravarActionPerformed
        if (camposobrigatoriospreenchidos()) {
            if (JOptionPane.showConfirmDialog(null, "Tem certeza que deseja realmente Gravar os dados deste cliente?", "Confirmar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (TfCodigo.getText().equals("")) {
                    if (RbPeFisica.isSelected()) {
                        ClassePessoaFisica fisica = new ClassePessoaFisica();
                        enviardadospefisica(fisica);
                        cliente.incluirclientefisico(fisica);
                        cliente.getPessoa().getTelefone().setCodigopessoa(fisica.getPessoa().getCodigo());
                        cliente.getPessoa().getEmail().setCodigopessoa(fisica.getPessoa().getCodigo());
                        JOptionPane.showMessageDialog(null, "Codigo: " + cliente.getCodigo() + "\n"
                                + "Cliente: " + fisica.getNome().toUpperCase(), "Informe o Codigo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        ClassePessoaJuridica juridica = new ClassePessoaJuridica();
                        enviardadospejuridica(juridica);
                        cliente.incluirclientejuridico(juridica);
                        cliente.getPessoa().getTelefone().setCodigopessoa(juridica.getPessoa().getCodigo());
                        cliente.getPessoa().getEmail().setCodigopessoa(juridica.getPessoa().getCodigo());
                        JOptionPane.showMessageDialog(null, "Codigo: " + cliente.getCodigo() + "\n"
                                + "Cliente: " + juridica.getNomefantasia().toUpperCase(), "Informe o Codigo", JOptionPane.INFORMATION_MESSAGE);

                    }
                    for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                        cliente.getPessoa().getTelefone().setCodigo(i + 1);
                        cliente.getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                        cliente.getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                        cliente.getPessoa().getTelefone().incluir();
                    }
                    for (int i = 0; i < TbEmail.getRowCount(); i++) {
                        cliente.getPessoa().getEmail().setCodigo(i + 1);
                        cliente.getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                        cliente.getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                        cliente.getPessoa().getEmail().incluir();
                    }
                    limpar.Limpar(PnCadastro);
                    limpar.Limpar(TbTelefone);
                    limpar.Limpar(TbEmail);
                    TfNrCPFKeyReleased(null);
                    TfNrCNPJKeyReleased(null);
                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                } else {
                    if ((RbPeFisica.isSelected() && cliente.getPessoa().getTipopessoa().equals("F"))
                            || (RbPeJuridica.isSelected() && cliente.getPessoa().getTipopessoa().equals("J"))) {
                        cliente.setCodigo(Integer.parseInt(TfCodigo.getText()));
                        cliente.getPessoa().setCodigo(cliente.retornacodigopessoacliente());
                        if (RbPeFisica.isSelected()) {
                            ClassePessoaFisica fisica = new ClassePessoaFisica();
                            fisica.getPessoa().setCodigo(cliente.getPessoa().getCodigo());
                            enviardadospefisica(fisica);
                            cliente.alterarclientefisico(fisica);
                        } else {
                            ClassePessoaJuridica juridica = new ClassePessoaJuridica();
                            juridica.getPessoa().setCodigo(cliente.getPessoa().getCodigo());
                            enviardadospejuridica(juridica);
                            cliente.alterarclientejuridico(juridica);
                        }
                        cliente.getPessoa().getTelefone().setCodigopessoa(cliente.getPessoa().getCodigo());
                        cliente.getPessoa().getEmail().setCodigopessoa(cliente.getPessoa().getCodigo());
                        cliente.getPessoa().getTelefone().deletartelefones();
                        cliente.getPessoa().getEmail().deletaremails();
                        for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                            cliente.getPessoa().getTelefone().setCodigo(i + 1);
                            cliente.getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                            cliente.getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                            cliente.getPessoa().getTelefone().incluir();
                        }
                        for (int i = 0; i < TbEmail.getRowCount(); i++) {
                            cliente.getPessoa().getEmail().setCodigo(i + 1);
                            cliente.getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                            cliente.getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                            cliente.getPessoa().getEmail().incluir();
                        }
                        limpar.Limpar(PnCadastro);
                        limpar.Limpar(TbTelefone);
                        limpar.Limpar(TbEmail);
                        TfNrCPFKeyReleased(null);
                        TfNrCNPJKeyReleased(null);
                        valida.validacamposCancelar(PnCadastro, PnBotoes);
                    } else {
                        JOptionPane.showMessageDialog(null, "O tipo do cliente deve ser o mesmo que cadastrado da primeira vez!\n"
                                + "(EX: Se antes o cliente era Pessoa Fisica, voce devera mante-la como Pessoa Fisica na alteracao dos dados)", "O cliente deve ter o mesmo tipo", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_BtGravarActionPerformed

    private void CbCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbCidadeActionPerformed

    }//GEN-LAST:event_CbCidadeActionPerformed

    private void TfNomeFisicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNomeFisicaKeyTyped
        valida.limitemaximo(evt, TfNomeFisica.getText(), 80);
    }//GEN-LAST:event_TfNomeFisicaKeyTyped

    private void TfNomeFantasiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNomeFantasiaKeyTyped
        valida.limitemaximo(evt, TfNomeFantasia.getText(), 80);
    }//GEN-LAST:event_TfNomeFantasiaKeyTyped

    private void TfRazaoSocialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfRazaoSocialKeyTyped
        valida.limitemaximo(evt, TfRazaoSocial.getText(), 80);
    }//GEN-LAST:event_TfRazaoSocialKeyTyped

    private void TfDsEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfDsEmailKeyTyped
        valida.limitemaximo(evt, TfDsEmail.getText(), 60);
    }//GEN-LAST:event_TfDsEmailKeyTyped

    private void TfLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfLogradouroKeyTyped
        valida.limitemaximo(evt, TfLogradouro.getText(), 50);
    }//GEN-LAST:event_TfLogradouroKeyTyped

    private void TfNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNumeroKeyTyped
        valida.limitemaximo(evt, TfNumero.getText(), 10);
    }//GEN-LAST:event_TfNumeroKeyTyped

    private void TfBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfBairroKeyTyped
        valida.limitemaximo(evt, TfBairro.getText(), 30);
    }//GEN-LAST:event_TfBairroKeyTyped

    private void MnItRetornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItRetornaActionPerformed
        if (TbPesquisa.getSelectedRow() != -1) {
            cliente.setCodigo(Integer.parseInt(TbPesquisa.getValueAt(TbPesquisa.getSelectedRow(), 0).toString()));
            cliente.getPessoa().setTipopessoa(cliente.retornatipocliente());
            cliente.getPessoa().setCodigo(cliente.retornacodigopessoacliente());
            if (cliente.getPessoa().getTipopessoa().equals("F")) {
                ClassePessoaFisica fisica = new ClassePessoaFisica();
                fisica.getPessoa().setCodigo(cliente.getPessoa().getCodigo());
                fisica.retornapessoafisica();
                valida.validacamposCancelar(PnCadastro, PnBotoes);
                limpar.Limpar(PnCadastro);
                RbPeFisica.setSelected(true);
                RbPeFisicaActionPerformed(evt);
                TfCodigo.setText("" + cliente.getCodigo() + "");
                TfDtCadastro.setText(fisica.getPessoa().getDatacadastro());
                TfNomeFisica.setText(fisica.getNome());
                TfNrCPF.setText(fisica.getCpf());
                TfNrCPFKeyReleased(null);
                TfNrRG.setText(fisica.getRg());
                if (fisica.getSexo().equals("M")) {
                    RbMasculino.setSelected(true);
                } else {
                    RbFeminino.setSelected(true);
                }
                TfDtNasc.setText(fisica.getDatanasc());

                TfLogradouro.setText(fisica.getPessoa().getEndereco().getLogradouro());
                TfCEP.setText(fisica.getPessoa().getEndereco().getCep());
                TfBairro.setText(fisica.getPessoa().getEndereco().getBairro());
                TfNumero.setText(fisica.getPessoa().getEndereco().getNumero());
                CbEstado.setSelectedItem(fisica.getPessoa().getEndereco().getCidade().getEstado().getEstado());
                CbEstadoActionPerformed(evt);
                CbCidade.setSelectedItem(fisica.getPessoa().getEndereco().getCidade().getCidade());
            } else {
                ClassePessoaJuridica juridica = new ClassePessoaJuridica();
                juridica.getPessoa().setCodigo(cliente.getPessoa().getCodigo());
                juridica.retornapessoajuridica();
                valida.validacamposCancelar(PnCadastro, PnBotoes);
                limpar.Limpar(PnCadastro);
                RbPeJuridica.setSelected(true);
                RbPeJuridicaActionPerformed(evt);
                TfCodigo.setText("" + cliente.getCodigo() + "");
                TfDtCadastro.setText(juridica.getPessoa().getDatacadastro());
                TfNomeFantasia.setText(juridica.getNomefantasia());
                TfRazaoSocial.setText(juridica.getRazaosocial());
                TfNrCNPJ.setText(juridica.getCnpj());
                TfNrCNPJKeyReleased(null);
                TfDtFund.setText(juridica.getDatafund());
                TfLogradouro.setText(juridica.getPessoa().getEndereco().getLogradouro());
                TfCEP.setText(juridica.getPessoa().getEndereco().getCep());
                TfBairro.setText(juridica.getPessoa().getEndereco().getBairro());
                TfNumero.setText(juridica.getPessoa().getEndereco().getNumero());
                CbEstado.setSelectedItem(juridica.getPessoa().getEndereco().getCidade().getEstado().getEstado());
                CbEstadoActionPerformed(evt);
                CbCidade.setSelectedItem(juridica.getPessoa().getEndereco().getCidade().getCidade());
            }
            cliente.getPessoa().getTelefone().setCodigopessoa(cliente.getPessoa().getCodigo());
            cliente.getPessoa().getEmail().setCodigopessoa(cliente.getPessoa().getCodigo());
            preenche.PreencheJtableSEL(TbTelefone, cliente.getPessoa().getTelefone().retornatelefonespessoa());
            preenche.PreencheJtableSEL(TbEmail, cliente.getPessoa().getEmail().retornaemailspessoa());
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            TabbedPaneCliente.setSelectedIndex(0);
        }
    }//GEN-LAST:event_MnItRetornaActionPerformed

    private void TfNrCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyTyped
        TfNrCPFKeyReleased(evt);
    }//GEN-LAST:event_TfNrCPFKeyTyped

    private void TfNrCNPJKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCNPJKeyTyped
        TfNrCNPJKeyReleased(evt);
    }//GEN-LAST:event_TfNrCNPJKeyTyped

    private void TfNrCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TfNrCPFKeyPressed

    private void TfNrCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyReleased
        ClassePessoaFisica fisica = new ClassePessoaFisica();
        fisica.setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(fisica.getCpf())) {
            if (!fisica.CPFnumerosiguais()) {
                if (fisica.CPFvalido()) {
                    LbCPFValido.setText("Valido");
                    LbCPFValido.setForeground(Color.green);
                } else {
                    LbCPFValido.setText("CPF Invalido");
                    LbCPFValido.setForeground(Color.red);
                }
            } else {
                LbCPFValido.setText("Numeros Iguais");
                LbCPFValido.setForeground(Color.red);
            }
        } else {
            LbCPFValido.setText("EspaÃ§os em Branco");
            LbCPFValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCPFKeyReleased

    private void TfNrCNPJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCNPJKeyReleased
        ClassePessoaJuridica juridica = new ClassePessoaJuridica();
        valida.FocusLostDeCamposFormatados(TfNrCNPJ);
        juridica.setCnpj(TfNrCNPJ.getText());
        if (valida.CampoTotalmentePreenchido(juridica.getCnpj())) {
            if (!juridica.CNPJnumerosiguais()) {
                if (juridica.CNPJvalido()) {
                    LbCNPJValido.setText("Valido");
                    LbCNPJValido.setForeground(Color.green);
                } else {
                    LbCNPJValido.setText("CNPJ Invalido");
                    LbCNPJValido.setForeground(Color.red);
                }
            } else {
                LbCNPJValido.setText("Numeros Iguais");
                LbCNPJValido.setForeground(Color.red);
            }
        } else {
            LbCNPJValido.setText("EspaÃ§os em Branco");
            LbCNPJValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCNPJKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(PnBotoes.isVisible() && BtGravar.isEnabled()){
            if(JOptionPane.showConfirmDialog(null, "Voce esta prestes a fechar esta janela.\nAo fechar esta janela tudo que voce digitou sera esquecido!", "Tem certeza que deseja fechar?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                dispose();
            }
        }else{
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAlterar;
    private javax.swing.JButton BtCadCidade;
    private javax.swing.JButton BtCadEstado;
    private javax.swing.JButton BtCancelar;
    private javax.swing.JButton BtExcluir;
    private javax.swing.JButton BtGravar;
    private javax.swing.JButton BtIncluir;
    private javax.swing.JButton BtPesquisa;
    private javax.swing.JComboBox CbCidade;
    private javax.swing.JComboBox CbEstado;
    private javax.swing.JComboBox CbPesquisa;
    private javax.swing.JComboBox CbPesquisa2;
    private javax.swing.JLabel LbCNPJValido;
    private javax.swing.JLabel LbCPFValido;
    private javax.swing.JMenuItem MnItRetorna;
    private javax.swing.JPanel PnBotoes;
    private javax.swing.JPanel PnCadastro;
    private javax.swing.JPanel PnConsulta;
    private javax.swing.JPopupMenu PopupMenuRetorna;
    private javax.swing.JRadioButton RbFeminino;
    private javax.swing.JRadioButton RbMasculino;
    private javax.swing.JRadioButton RbPeFisica;
    private javax.swing.JRadioButton RbPeJuridica;
    private javax.swing.JTabbedPane TabbedPaneCliente;
    private javax.swing.JTable TbEmail;
    private javax.swing.JTable TbPesquisa;
    private javax.swing.JTable TbTelefone;
    private javax.swing.JTextField TfBairro;
    private javax.swing.JFormattedTextField TfCEP;
    private javax.swing.JTextField TfCodigo;
    private javax.swing.JTextField TfDsEmail;
    private javax.swing.JFormattedTextField TfDtCadastro;
    private javax.swing.JFormattedTextField TfDtFund;
    private javax.swing.JFormattedTextField TfDtNasc;
    private javax.swing.JTextField TfLogradouro;
    private javax.swing.JTextField TfNomeFantasia;
    private javax.swing.JTextField TfNomeFisica;
    private javax.swing.JFormattedTextField TfNrCNPJ;
    private javax.swing.JFormattedTextField TfNrCPF;
    private javax.swing.JFormattedTextField TfNrRG;
    private javax.swing.JFormattedTextField TfNrTelefone;
    private javax.swing.JTextField TfNumero;
    private javax.swing.JTextField TfPesquisa;
    private javax.swing.JTextField TfRazaoSocial;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jBtAddEmail;
    private javax.swing.JButton jBtAddTelefone;
    private javax.swing.JButton jBtDelEmail;
    private javax.swing.JButton jBtDelTelefone;
    private javax.swing.JComboBox jCbOpEmail;
    private javax.swing.JComboBox jCbOpTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables

    public void analisausuario(){
        getTelasusuario().getTela().setCodigo(1);
        if(!getTelasusuario().eadmintela()){
            PnBotoes.setVisible(false);
        }
        
        getTelasusuario().getTela().setCodigo(4);
        if(!getTelasusuario().eadmintela()){
            BtCadEstado.setVisible(false);
        }
        
        getTelasusuario().getTela().setCodigo(5);
        if(!getTelasusuario().eadmintela()){
            BtCadCidade.setVisible(false);
        }
    }
    
    public void LiberaCamposFouJ(boolean sit) {
        TfNomeFisica.setEditable(sit);
        RbMasculino.setEnabled(sit);
        RbFeminino.setEnabled(sit);
        TfNrRG.setEditable(sit);
        TfNrCPF.setEditable(sit);
        TfDtNasc.setEditable(sit);

        TfNomeFantasia.setEditable(!sit);
        TfRazaoSocial.setEditable(!sit);
        TfNrCNPJ.setEditable(!sit);
        TfDtFund.setEditable(!sit);
    }

    public boolean camposobrigatoriospreenchidos() {
        if (RbPeFisica.isSelected()) {
            if (!TfNomeFisica.getText().equals("")) {
            } else {
                JOptionPane.showMessageDialog(null, "Nome da Pessoa Fisica e obrigatorio");
                TfNomeFisica.grabFocus();
                return false;
            }
            Color cor = LbCPFValido.getForeground();
            if (cor == Color.green) {
            } else {
                JOptionPane.showMessageDialog(null, "Digite um CPF valido");
                TfNrCPF.grabFocus();
                return false;
            }
            if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
            } else {
                JOptionPane.showMessageDialog(null, "Digite a Data de Nascimento");
                TfDtNasc.grabFocus();
                return false;
            }
        }
        if (RbPeJuridica.isSelected()) {
            if (!TfNomeFantasia.getText().equals("")) {
            } else {
                JOptionPane.showMessageDialog(null, "Nome Fantasia e obrigatorio");
                TfNomeFantasia.grabFocus();
                return false;
            }
            Color cor = LbCNPJValido.getForeground();
            if (cor == Color.green) {
            } else {
                JOptionPane.showMessageDialog(null, "Digite um CNPJ valido!");
                TfNrCNPJ.grabFocus();
                return false;
            }
        }
        if (TfLogradouro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite a Rua/Avenida que o cliente mora!");
            TfLogradouro.grabFocus();
            return false;
        }
        if (TfNumero.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o Numero da residencia do cliente!");
            TfNumero.grabFocus();
            return false;
        }
        if (!valida.CampoTotalmentePreenchido(TfCEP.getText())) {
            JOptionPane.showMessageDialog(null, "Digite o CEP de onde o cliente mora!");
            TfCEP.grabFocus();
            return false;
        }
        if (TfBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o Bairro de onde o cliente mora!");
            TfBairro.grabFocus();
            return false;
        }
        if (CbEstado.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Insira ou cadastre um Estado!");
            BtCadEstado.grabFocus();
            return false;
        }
        if (CbCidade.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Insira ou cadastre uma Cidade!");
            BtCadCidade.grabFocus();
            return false;
        }
        return true;
    }

    public void enviardadospefisica(ClassePessoaFisica pefisica) {
        pefisica.getPessoa().setDatacadastro(TfDtCadastro.getText());
        pefisica.getPessoa().setTipopessoa("F");
        pefisica.setNome(TfNomeFisica.getText());
        pefisica.setCpf(TfNrCPF.getText());
        pefisica.setRg(TfNrRG.getText());
        pefisica.setDatanasc(TfDtNasc.getText());
        if (RbMasculino.isSelected()) {
            pefisica.setSexo("M");
        }
        if (RbFeminino.isSelected()) {
            pefisica.setSexo("F");
        }
        pefisica.getPessoa().getEndereco().setLogradouro(TfLogradouro.getText());
        pefisica.getPessoa().getEndereco().setNumero(TfNumero.getText());
        pefisica.getPessoa().getEndereco().setBairro(TfBairro.getText());
        pefisica.getPessoa().getEndereco().setCep(TfCEP.getText());
        pefisica.getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        pefisica.getPessoa().getEndereco().getCidade().getEstado().setCodigo(pefisica.getPessoa().getEndereco().getCidade().getEstado().retornacodigo());
        pefisica.getPessoa().getEndereco().getCidade().setCidade(CbCidade.getSelectedItem().toString());
        pefisica.getPessoa().getEndereco().getCidade().setCodigo(pefisica.getPessoa().getEndereco().getCidade().retornacodigo());
    }

    public void enviardadospejuridica(ClassePessoaJuridica pejuridica) {
        pejuridica.getPessoa().setDatacadastro(TfDtCadastro.getText());
        pejuridica.getPessoa().setTipopessoa("J");
        pejuridica.setNomefantasia(TfNomeFantasia.getText());
        pejuridica.setCnpj(TfNrCNPJ.getText());
        pejuridica.setRazaosocial(TfRazaoSocial.getText());
        pejuridica.setDatafund(TfDtFund.getText());
        if (pejuridica.getDatafund().equals("  /  /    ")) {
            pejuridica.setDatafund("01/01/0001");
        }
        pejuridica.getPessoa().getEndereco().setLogradouro(TfLogradouro.getText());
        pejuridica.getPessoa().getEndereco().setNumero(TfNumero.getText());
        pejuridica.getPessoa().getEndereco().setBairro(TfBairro.getText());
        pejuridica.getPessoa().getEndereco().setCep(TfCEP.getText());
        pejuridica.getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        pejuridica.getPessoa().getEndereco().getCidade().getEstado().setCodigo(pejuridica.getPessoa().getEndereco().getCidade().getEstado().retornacodigo());
        pejuridica.getPessoa().getEndereco().getCidade().setCidade(CbCidade.getSelectedItem().toString());
        pejuridica.getPessoa().getEndereco().getCidade().setCodigo(pejuridica.getPessoa().getEndereco().getCidade().retornacodigo());
    }

    public java.awt.Frame getPrimeiratela() {
        return primeiratela;
    }

    public void setPrimeiratela(java.awt.Frame primeiratela) {
        this.primeiratela = primeiratela;
    }

    public ClasseTelasUsuario getTelasusuario() {
        return telasusuario;
    }

    public void setTelasusuario(ClasseTelasUsuario telasusuario) {
        this.telasusuario = telasusuario;
    }
}
