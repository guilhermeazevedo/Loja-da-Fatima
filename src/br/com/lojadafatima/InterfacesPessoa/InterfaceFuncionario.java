package br.com.lojadafatima.InterfacesPessoa;

import br.com.lojadafatima.ClassesFerramentas.ClasseDatas;
import br.com.lojadafatima.ClassesFerramentas.GerenciadorCamposBotoes;
import br.com.lojadafatima.ClassesFerramentas.LimpaCamposTela;
import br.com.lojadafatima.ClassesFerramentas.MensagensUsuario;
import br.com.lojadafatima.ClassesFerramentas.NaoPermiteAspasSimples;
import br.com.lojadafatima.ClassesFerramentas.PermiteApenasNumeros;
import br.com.lojadafatima.ClassesFerramentas.PermiteNumerosPontoBarra;
import br.com.lojadafatima.ClassesFerramentas.Preenche;
import br.com.lojadafatima.Pessoa.ClasseFuncionario;
import br.com.lojadafatima.Usuario.ClasseTelasUsuario;
import java.math.BigDecimal;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Guilherme Azevedo
 */
public class InterfaceFuncionario extends javax.swing.JDialog {

    MaskFormatter data, rg, cpf, cep, fone, valor, comissao;
    private java.awt.Frame primeiratela;
    Preenche preenche = new Preenche();
    ClasseFuncionario funcionario = new ClasseFuncionario();
    GerenciadorCamposBotoes valida = new GerenciadorCamposBotoes();
    LimpaCamposTela limpar = new LimpaCamposTela();
    ClasseDatas datas = new ClasseDatas();
    private ClasseTelasUsuario telasusuario = new ClasseTelasUsuario();
    MensagensUsuario msg = new MensagensUsuario();

    public InterfaceFuncionario(java.awt.Frame telaorigem, boolean modal, ClasseTelasUsuario usuario) {
        super(telaorigem, modal);
        setPrimeiratela(telaorigem);
        initComponents();
        setTelasusuario(usuario);
        analisausuario();
        TfNrCPFFocusLost(null);
        valida.validacamposCancelar(PnCadastro, PnBotoes);
        setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        TbPesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        TfBairro.setDocument(new NaoPermiteAspasSimples());
        TfDsEmail.setDocument(new NaoPermiteAspasSimples());
        TfFuncao.setDocument(new NaoPermiteAspasSimples());
        TfLogradouro.setDocument(new NaoPermiteAspasSimples());
        TfNomeFisica.setDocument(new NaoPermiteAspasSimples());
        TfNumero.setDocument(new NaoPermiteAspasSimples());
        preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        PopupMenuRetorna = new javax.swing.JPopupMenu();
        MnItRetorna = new javax.swing.JMenuItem();
        TabbedPaneFuncionario = new javax.swing.JTabbedPane();
        PnCadastro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TfCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TfNomeFisica = new javax.swing.JTextField();
        try{
            cpf = new MaskFormatter("###.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrCPF = new JFormattedTextField(cpf);
        jLabel4 = new javax.swing.JLabel();
        try{
            rg = new MaskFormatter("##.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrRG = new JFormattedTextField(rg);
        RbFeminino = new javax.swing.JRadioButton();
        RbMasculino = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtNasc = new JFormattedTextField(data);
        jSeparator1 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        try{
            fone = new MaskFormatter("(##)####-####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrTelefone = new JFormattedTextField(fone);
        jCbOpTelefone = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jBtAddTelefone = new javax.swing.JButton();
        jBtDelTelefone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbTelefone = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        TfDsEmail = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jCbOpEmail = new javax.swing.JComboBox();
        jBtAddEmail = new javax.swing.JButton();
        jBtDelEmail = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbEmail = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        TfLogradouro = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TfNumero = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TfBairro = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        CbEstado = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        CbCidade = new javax.swing.JComboBox();
        BtCadCidade = new javax.swing.JButton();
        BtCadEstado = new javax.swing.JButton();
        PnBotoes = new javax.swing.JPanel();
        BtGravar = new javax.swing.JButton();
        BtAlterar = new javax.swing.JButton();
        BtIncluir = new javax.swing.JButton();
        BtExcluir = new javax.swing.JButton();
        BtCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        TfFuncao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtCadastro = new JFormattedTextField(data);
        try{
            cep = new MaskFormatter("#####-###");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfCEP = new JFormattedTextField(cep);
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        LbCPFValido = new javax.swing.JLabel();
        TfComissao = new JNumberField.JNumberField(2);
        ;
        TfSalario = new JNumberField.JNumberField();
        jLabel14 = new javax.swing.JLabel();
        TfMaxDesconto = new JNumberField.JNumberField(2);
        ;
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        LbNotificacao = new javax.swing.JLabel();
        PnConsulta = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        CbPesquisa = new javax.swing.JComboBox();
        TfPesquisa = new javax.swing.JTextField();
        BtPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbPesquisa = new javax.swing.JTable();

        MnItRetorna.setText("Carregar dados");
        MnItRetorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItRetornaActionPerformed(evt);
            }
        });
        PopupMenuRetorna.add(MnItRetorna);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Funcionário - Software Loja da Fátima");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PnCadastro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Código");
        PnCadastro.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        TfCodigo.setEditable(false);
        PnCadastro.add(TfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 31, 80, -1));

        jLabel6.setText("Nº CPF*");
        PnCadastro.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 103, -1, -1));

        TfNomeFisica.setName("NM_PESSOA"); // NOI18N
        TfNomeFisica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNomeFisicaKeyTyped(evt);
            }
        });
        PnCadastro.add(TfNomeFisica, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 77, 366, -1));

        TfNrCPF.setName("NR_CPF"); // NOI18N
        TfNrCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrCPFFocusLost(evt);
            }
        });
        TfNrCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyTyped(evt);
            }
        });
        PnCadastro.add(TfNrCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 121, 120, -1));

        jLabel4.setText("Sexo*");
        PnCadastro.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, -1, -1));

        TfNrRG.setName("NR_RG"); // NOI18N
        TfNrRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrRGFocusLost(evt);
            }
        });
        PnCadastro.add(TfNrRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 121, 120, -1));

        buttonGroup1.add(RbFeminino);
        RbFeminino.setText("Feminino");
        PnCadastro.add(RbFeminino, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 143, -1, -1));

        buttonGroup1.add(RbMasculino);
        RbMasculino.setSelected(true);
        RbMasculino.setText("Masculino");
        PnCadastro.add(RbMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel3.setText("Nome*");
        PnCadastro.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 57, -1, -1));

        jLabel5.setText("Nº RG");
        PnCadastro.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 103, -1, -1));

        jLabel15.setText("Data de Nascimento*");
        PnCadastro.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 173, -1, -1));

        TfDtNasc.setName("DT_NASC"); // NOI18N
        TfDtNasc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfDtNascFocusLost(evt);
            }
        });
        PnCadastro.add(TfDtNasc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 193, 109, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PnCadastro.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 11, -1, 285));

        jLabel23.setText("Nr. Telefone:");
        PnCadastro.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 11, -1, -1));

        TfNrTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrTelefoneFocusLost(evt);
            }
        });
        PnCadastro.add(TfNrTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 31, 194, -1));

        jCbOpTelefone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "CELULAR", "ALTERNATIVO" }));
        PnCadastro.add(jCbOpTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 77, 194, -1));

        jLabel20.setText("Tipo");
        PnCadastro.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 57, -1, -1));

        jBtAddTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/adicionar.png"))); // NOI18N
        jBtAddTelefone.setText("Adicionar");
        jBtAddTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddTelefoneActionPerformed(evt);
            }
        });
        PnCadastro.add(jBtAddTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 115, -1, -1));

        jBtDelTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/deletar.png"))); // NOI18N
        jBtDelTelefone.setText("Excluir");
        jBtDelTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelTelefoneActionPerformed(evt);
            }
        });
        PnCadastro.add(jBtDelTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 115, -1, -1));

        TbTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Nr. Telefone", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbTelefone.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TbTelefone);

        PnCadastro.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(652, 11, 250, 142));

        jLabel24.setText("E-mail");
        PnCadastro.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 164, -1, -1));

        TfDsEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfDsEmailKeyTyped(evt);
            }
        });
        PnCadastro.add(TfDsEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 184, 194, -1));

        jLabel25.setText("Tipo");
        PnCadastro.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 215, -1, -1));

        jCbOpEmail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "ALTERNATIVO" }));
        PnCadastro.add(jCbOpEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(429, 235, 194, -1));

        jBtAddEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/adicionar.png"))); // NOI18N
        jBtAddEmail.setText("Adicionar");
        jBtAddEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddEmailActionPerformed(evt);
            }
        });
        PnCadastro.add(jBtAddEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 273, -1, -1));

        jBtDelEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/deletar.png"))); // NOI18N
        jBtDelEmail.setText("Excluir");
        jBtDelEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelEmailActionPerformed(evt);
            }
        });
        PnCadastro.add(jBtDelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 273, -1, -1));

        TbEmail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "E-mail", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbEmail.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(TbEmail);

        PnCadastro.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(652, 164, 250, 143));

        jLabel10.setText("Rua/Avenida*");
        PnCadastro.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 321, -1, -1));

        TfLogradouro.setName("DS_RUA"); // NOI18N
        TfLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfLogradouroKeyTyped(evt);
            }
        });
        PnCadastro.add(TfLogradouro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 341, 372, -1));

        jLabel11.setText("Numero*");
        PnCadastro.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 321, -1, -1));

        TfNumero.setName("DS_NUMERO"); // NOI18N
        TfNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNumeroKeyTyped(evt);
            }
        });
        PnCadastro.add(TfNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 341, 126, -1));

        jLabel13.setText("CEP*");
        PnCadastro.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 367, -1, -1));

        jLabel12.setText("Bairro*");
        PnCadastro.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 367, -1, -1));

        TfBairro.setName("DS_BAIRRO"); // NOI18N
        TfBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfBairroKeyTyped(evt);
            }
        });
        PnCadastro.add(TfBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 387, 372, -1));

        jLabel17.setText("Estado");
        PnCadastro.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 413, -1, -1));

        CbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbEstadoActionPerformed(evt);
            }
        });
        PnCadastro.add(CbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 434, 150, -1));

        jLabel18.setText("Cidade");
        PnCadastro.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 413, -1, -1));

        PnCadastro.add(CbCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 434, 150, -1));

        BtCadCidade.setText("Adicionar Cidade");
        BtCadCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadCidadeActionPerformed(evt);
            }
        });
        PnCadastro.add(BtCadCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 433, -1, -1));

        BtCadEstado.setText("Adicionar Estado");
        BtCadEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadEstadoActionPerformed(evt);
            }
        });
        PnCadastro.add(BtCadEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 433, -1, -1));

        BtGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/salvar.png"))); // NOI18N
        BtGravar.setText("Gravar");
        BtGravar.setName("Gravar"); // NOI18N
        BtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGravarActionPerformed(evt);
            }
        });

        BtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/editar.png"))); // NOI18N
        BtAlterar.setText("Alterar Dados");
        BtAlterar.setName("Alterar"); // NOI18N
        BtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAlterarActionPerformed(evt);
            }
        });

        BtIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/adicionar.png"))); // NOI18N
        BtIncluir.setText("Cadastrar Funcionário");
        BtIncluir.setName("Incluir"); // NOI18N
        BtIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtIncluirActionPerformed(evt);
            }
        });

        BtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/lixeira.png"))); // NOI18N
        BtExcluir.setText("Excluir Funcionário");
        BtExcluir.setName("Excluir"); // NOI18N
        BtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcluirActionPerformed(evt);
            }
        });

        BtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/cancelar.png"))); // NOI18N
        BtCancelar.setText("Cancelar");
        BtCancelar.setName("Cancelar"); // NOI18N
        BtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnBotoesLayout = new javax.swing.GroupLayout(PnBotoes);
        PnBotoes.setLayout(PnBotoesLayout);
        PnBotoesLayout.setHorizontalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnBotoesLayout.createSequentialGroup()
                .addComponent(BtIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(BtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PnBotoesLayout.setVerticalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
            .addComponent(BtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PnCadastro.add(PnBotoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 474, 892, -1));

        jLabel7.setText("Função*");
        PnCadastro.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 219, -1, -1));

        TfFuncao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfFuncaoKeyTyped(evt);
            }
        });
        PnCadastro.add(TfFuncao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 234, 216, -1));

        jLabel8.setText("Salário*");
        PnCadastro.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));
        PnCadastro.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 313, 912, -1));

        jLabel9.setText("Data do Cadastro");
        PnCadastro.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 11, -1, -1));

        TfDtCadastro.setEditable(false);
        TfDtCadastro.setName("DT_NASC"); // NOI18N
        PnCadastro.add(TfDtCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 31, 109, -1));

        TfCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfCEPFocusLost(evt);
            }
        });
        PnCadastro.add(TfCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 387, 126, -1));

        jLabel16.setText("Comissão*");
        PnCadastro.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 260, -1, -1));

        jLabel19.setText("%");
        PnCadastro.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, -1, -1));

        LbCPFValido.setText("Informa CPF Valido");
        PnCadastro.add(LbCPFValido, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 147, -1, -1));

        TfComissao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfComissaoKeyTyped(evt);
            }
        });
        PnCadastro.add(TfComissao, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 277, 74, -1));

        TfSalario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfSalarioKeyTyped(evt);
            }
        });
        PnCadastro.add(TfSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 277, 98, -1));

        jLabel14.setText("Máximo de % desconto");
        PnCadastro.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 260, -1, -1));

        TfMaxDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfMaxDescontoKeyTyped(evt);
            }
        });
        PnCadastro.add(TfMaxDesconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 277, 112, -1));

        jLabel21.setText("%");
        PnCadastro.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 280, -1, -1));

        LbNotificacao.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(LbNotificacao)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LbNotificacao)
        );

        PnCadastro.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 523, 892, -1));

        TabbedPaneFuncionario.addTab("Cadastro", PnCadastro);

        PnConsulta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Consulta por:");
        PnConsulta.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        CbPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos os Funcionários", "Código", "Nome", "Função", "CPF" }));
        CbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbPesquisaActionPerformed(evt);
            }
        });
        PnConsulta.add(CbPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 33, 160, -1));

        TfPesquisa.setEnabled(false);
        PnConsulta.add(TfPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 33, 536, -1));

        BtPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/buscar.png"))); // NOI18N
        BtPesquisa.setText("Pesquisar");
        BtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtPesquisaActionPerformed(evt);
            }
        });
        PnConsulta.add(BtPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(718, 31, 184, -1));

        TbPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Função", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbPesquisa.setComponentPopupMenu(PopupMenuRetorna);
        TbPesquisa.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TbPesquisa);
        if (TbPesquisa.getColumnModel().getColumnCount() > 0) {
            TbPesquisa.getColumnModel().getColumn(0).setResizable(false);
        }

        PnConsulta.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, 892, 479));

        TabbedPaneFuncionario.addTab("Consulta", PnConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneFuncionario)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtAddTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddTelefoneActionPerformed
        preenche.PreencheJTableEmailOuTelefone(TfNrTelefone, jCbOpTelefone, TbTelefone);
    }//GEN-LAST:event_jBtAddTelefoneActionPerformed

    private void jBtDelTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelTelefoneActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbTelefone);
    }//GEN-LAST:event_jBtDelTelefoneActionPerformed

    private void jBtAddEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddEmailActionPerformed
        preenche.PreencheJTableEmailOuTelefone(TfDsEmail, jCbOpEmail, TbEmail);
    }//GEN-LAST:event_jBtAddEmailActionPerformed

    private void jBtDelEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelEmailActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbEmail);
    }//GEN-LAST:event_jBtDelEmailActionPerformed

    private void BtCadEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadEstadoActionPerformed
        final InterfaceEstado tela = new InterfaceEstado(getPrimeiratela(), true, getTelasusuario());
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
            }
        });
    }//GEN-LAST:event_BtCadEstadoActionPerformed

    private void BtCadCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadCidadeActionPerformed
        final InterfaceCidade tela = new InterfaceCidade(getPrimeiratela(), true, getTelasusuario());
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                CbEstadoActionPerformed(null);
            }
        });
    }//GEN-LAST:event_BtCadCidadeActionPerformed

    private void CbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbEstadoActionPerformed
        if (CbEstado.getSelectedItem() == null) {
            preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        }
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        preenche.PreencheJComboBox(CbCidade, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().buscarcidadesporestado());
    }//GEN-LAST:event_CbEstadoActionPerformed

    private void TfNrCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrCPFFocusLost
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(funcionario.getPessoafis().getCpf())) {
            if (!funcionario.getPessoafis().CPFnumerosiguais()) {
                if (funcionario.getPessoafis().CPFvalido()) {
                    LbCPFValido.setText("Válido");
                    LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/sucesso2.png")));
                    if (funcionario.getPessoafis().CPFexistente()) {
                        if (funcionario.efuncionario()) {
                            if (!TfCodigo.getText().equals("") && (funcionario.getCodigo() == Integer.parseInt(TfCodigo.getText()))) {
                            } else if (funcionario.efuncionarioativo()) {
                                JOptionPane.showMessageDialog(null, "Este CPF pertence a um funcionario já cadastrado no sistema!\n"
                                        + "Consulte os dados deste funcionário na aba \"Consulta\" e informe o código ao funcionário, caso ele tenha esquecido!", "CPF existente", JOptionPane.INFORMATION_MESSAGE);
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            } else {
                                int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + funcionario.getPessoafis().retornanomeporCPF() + ". "
                                        + "Os dados desta pessoa foram excluídas do sistema!\n\n"
                                        + "Deseja recuperar os dados desta pessoa?", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                                if (op == JOptionPane.YES_OPTION) {
                                    funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
                                    funcionario.getPessoafis().getPessoa().recuperar();
                                    JOptionPane.showMessageDialog(null, "Recuperação realizada com sucesso!\nAs informações do funcionário permanecem iguais as que estavam cadastradas no momento da exclusão\n\n"
                                            + "Código: " + funcionario.getCodigo() + "\nNome: " + funcionario.getPessoafis().retornanomeporCPF(), "Recuperação realizada com sucesso", JOptionPane.INFORMATION_MESSAGE);
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                } else {
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                }
                            }
                        } else {
                            int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + funcionario.getPessoafis().retornanomeporCPF() + ". "
                                    + "Os dados desta pessoa estão cadastrados no sistema!\n\n"
                                    + "Deseja importar os dados desta pessoa para criar um novo funcionário?\n"
                                    + "(Caso queira, o funcionário sera criado automaticamente com as informações contidas no sistema)", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                            if (op == JOptionPane.YES_OPTION) {
                                if (TfFuncao.getText().equals("") || TfSalario.getValue() == BigDecimal.valueOf(0) || TfComissao.getValue() == BigDecimal.valueOf(0)) {
                                    JOptionPane.showMessageDialog(null, "Primeiro digite os dados específicos de funcionário, depois disso digite o CPF novamente!", "Campos obrigatórios", JOptionPane.INFORMATION_MESSAGE);
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                } else {
                                    funcionario.setFuncao(TfFuncao.getText());
                                    funcionario.setComissao(Float.parseFloat(TfComissao.getValue().toString()));
                                    funcionario.setSalario(Float.parseFloat(TfSalario.getValue().toString()));
                                    funcionario.importardadosnovofuncionario();
                                    JOptionPane.showMessageDialog(null, "Importação dos dados realizada com sucesso!\n"
                                            + "Um novo funcionário está gravado no sistema com as informações contidas no CPF da pessoa.\n"
                                            + "Caso deseja conferir ou alterar os dados do funcionário, faça a busca na aba \"Consulta\".\n\n"
                                            + "Código: " + funcionario.getCodigo() + "\nNome: " + funcionario.getPessoafis().retornanomeporCPF());
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                }
                            } else {
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            }
                        }
                    }
                } else {
                    LbCPFValido.setText("CPF Inválido");
                    LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
                }
            } else {
                LbCPFValido.setText("Números Iguais");
                LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
            }
        } else {
            LbCPFValido.setText("Espaços em Branco");
            LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
        }
    }//GEN-LAST:event_TfNrCPFFocusLost

    private void TfNrRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrRGFocusLost
        valida.FocusLostDeCamposFormatados(TfNrRG);
    }//GEN-LAST:event_TfNrRGFocusLost

    private void TfDtNascFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfDtNascFocusLost
        if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
            if (datas.validadatas(TfDtNasc.getText())) {

            } else {
                TfDtNasc.setValue(null);
            }
        } else {
            if (datas.validadatas(TfDtNasc.getText())) {

            } else {
                TfDtNasc.setValue(null);
            }
        }
    }//GEN-LAST:event_TfDtNascFocusLost

    private void TfNrTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrTelefoneFocusLost
        valida.FocusLostDeCamposFormatados(TfNrTelefone);
    }//GEN-LAST:event_TfNrTelefoneFocusLost

    private void TfCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfCEPFocusLost
        valida.FocusLostDeCamposFormatados(TfCEP);
    }//GEN-LAST:event_TfCEPFocusLost

    private void TfNomeFisicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNomeFisicaKeyTyped
        valida.limitemaximo(evt, TfNomeFisica.getText(), 80);
    }//GEN-LAST:event_TfNomeFisicaKeyTyped

    private void TfFuncaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfFuncaoKeyTyped
        valida.limitemaximo(evt, TfFuncao.getText(), 50);
    }//GEN-LAST:event_TfFuncaoKeyTyped

    private void TfDsEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfDsEmailKeyTyped
        valida.limitemaximo(evt, TfDsEmail.getText(), 60);
    }//GEN-LAST:event_TfDsEmailKeyTyped

    private void TfLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfLogradouroKeyTyped
        valida.limitemaximo(evt, TfLogradouro.getText(), 50);
    }//GEN-LAST:event_TfLogradouroKeyTyped

    private void TfNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNumeroKeyTyped
        valida.limitemaximo(evt, TfNumero.getText(), 10);
    }//GEN-LAST:event_TfNumeroKeyTyped

    private void TfBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfBairroKeyTyped
        valida.limitemaximo(evt, TfBairro.getText(), 30);
    }//GEN-LAST:event_TfBairroKeyTyped

    private void BtIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtIncluirActionPerformed
        valida.validacamposCadastrar(PnCadastro, PnBotoes);
        limpar.Limpar(PnCadastro);
        limpar.Limpar(TbTelefone);
        limpar.Limpar(TbEmail);
        preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        TfDtCadastro.setText(datas.retornadataatual());
        TfNrCPFKeyReleased(null);
        msg.StatusNovo(LbNotificacao, "Insira os dados do novo Funcionario");
    }//GEN-LAST:event_BtIncluirActionPerformed

    private void BtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAlterarActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Funcionário na Aba \"Consulta\" e selecione a opção \"Carregar Dados\" após selecionar e\nclicar com o botão direito sobre os dados do funcionário para que a opção de Alterar os Dados seja realizada!");
            TabbedPaneFuncionario.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            valida.validacamposCadastrar(PnCadastro, PnBotoes);
            msg.StatusEditar(LbNotificacao, "Alterando dados do Funcionário...");
        }
    }//GEN-LAST:event_BtAlterarActionPerformed

    private void BtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcluirActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Funcionário na Aba \"Consulta\" e selecione a opção \"Carregar Dados\" após selecionar e\nclicar com o botão direito sobre os dados do funcionário para que a opção de Excluir os Dados seja realizada!");
            TabbedPaneFuncionario.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            if (JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja EXCLUIR os dados deste Funcionário?", "Deseja excluir?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                funcionario.setCodigo(Integer.parseInt(TfCodigo.getText()));
                if(funcionario.excluir()) msg.StatusExcluido(LbNotificacao, "Funcionario excluido com sucesso!");
                limpar.Limpar(PnCadastro);
                limpar.Limpar(TbTelefone);
                limpar.Limpar(TbEmail);
                valida.validacamposCancelar(PnCadastro, PnBotoes);
                TfNrCPFKeyReleased(null);
                BtPesquisaActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_BtExcluirActionPerformed

    private void BtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Deseja realmente Cancelar esta operação?\n(TODOS os dados na tela serão limpos)", "Confirmar ação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpar.Limpar(PnCadastro);
            limpar.Limpar(TbTelefone);
            limpar.Limpar(TbEmail);
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            TfNrCPFKeyReleased(null);
            msg.Limpar(LbNotificacao);
        }
    }//GEN-LAST:event_BtCancelarActionPerformed

    private void TfNrCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyTyped
        TfNrCPFKeyReleased(evt);
    }//GEN-LAST:event_TfNrCPFKeyTyped

    private void BtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtPesquisaActionPerformed
        int[] parametro = new int[4];
        parametro[0] = 70;
        parametro[1] = 300;
        parametro[2] = 200;
        parametro[3] = 70;
        preenche.FormataJtable(TbPesquisa, parametro);

        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                preenche.PreencherJtable(TbPesquisa, funcionario.consultageral());
                break;
            }
            case 1: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o Código do funcionário que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.setCodigo(Integer.parseInt(TfPesquisa.getText()));
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultacodigo());
                }
                break;
            }
            case 2: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o Nome do funcionário que deseja consultar!", "Digite o nome", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.getPessoafis().setNome(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultanome());
                }
                break;
            }
            case 3: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite a função do funcionário que deseja consultar!", "Digite a função", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.setFuncao(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultafuncao());
                }
                break;
            }
            case 4: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o CPF do funcionário que deseja consultar!", "Digite o CPF", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.getPessoafis().setCpf(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultaCPF());
                }
                break;
            }
        }
    }//GEN-LAST:event_BtPesquisaActionPerformed

    private void BtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGravarActionPerformed
        if (camposobrigatoriospreenchidos()) {
            if (JOptionPane.showConfirmDialog(null, "Tem certeza que deseja realmente Gravar os dados deste funcionário?", "Confirmar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (TfCodigo.getText().equals("")) {
                    enviardados();
                    if (funcionario.incluir()) msg.Sucesso(LbNotificacao, "Dados do Funcionário gravados com sucesso!");
                    funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    JOptionPane.showMessageDialog(null, "Código: " + funcionario.getCodigo() + "\n"
                            + "Funcionário: " + funcionario.getPessoafis().getNome().toUpperCase(), "Informe o Código", JOptionPane.INFORMATION_MESSAGE);
                    for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getTelefone().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().incluir();
                    }
                    for (int i = 0; i < TbEmail.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getEmail().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().incluir();
                    }
                    limpar.Limpar(PnCadastro);
                    limpar.Limpar(TbTelefone);
                    limpar.Limpar(TbEmail);
                    TfNrCPFKeyReleased(null);
                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                } else {
                    funcionario.setCodigo(Integer.parseInt(TfCodigo.getText()));
                    funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
                    enviardados();
                    if(funcionario.alterar()) msg.Sucesso(LbNotificacao, "Dados do Funcionário alterados com sucesso!");
                    funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getTelefone().deletartelefones();
                    funcionario.getPessoafis().getPessoa().getEmail().deletaremails();
                    for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getTelefone().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().incluir();
                    }
                    for (int i = 0; i < TbEmail.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getEmail().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().incluir();
                    }
                    limpar.Limpar(PnCadastro);
                    limpar.Limpar(TbTelefone);
                    limpar.Limpar(TbEmail);
                    TfNrCPFKeyReleased(null);
                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                }
            }
        }
    }//GEN-LAST:event_BtGravarActionPerformed

    private void CbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbPesquisaActionPerformed
        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                TfPesquisa.setEnabled(false);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 1: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(new PermiteApenasNumeros());
                break;
            }
            case 2: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 3: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 4: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(new PermiteNumerosPontoBarra());
                break;
            }
        }
    }//GEN-LAST:event_CbPesquisaActionPerformed

    private void MnItRetornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItRetornaActionPerformed
        if (TbPesquisa.getSelectedRow() != -1) {
            funcionario.setCodigo(Integer.parseInt(TbPesquisa.getValueAt(TbPesquisa.getSelectedRow(), 0).toString()));
            funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
            funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
            funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
            preenche.PreencheJtableSEL(TbTelefone, funcionario.getPessoafis().getPessoa().getTelefone().retornatelefonespessoa());
            preenche.PreencheJtableSEL(TbEmail, funcionario.getPessoafis().getPessoa().getEmail().retornaemailspessoa());
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            limpar.Limpar(PnCadastro);
            funcionario.retornafuncionario();
            TfFuncao.setText(funcionario.getFuncao());
            TfSalario.setValue(BigDecimal.valueOf(funcionario.getSalario()));
            TfComissao.setValue(BigDecimal.valueOf(funcionario.getComissao()));
            TfMaxDesconto.setValue(BigDecimal.valueOf(funcionario.getMaxdesconto()));
            funcionario.getPessoafis().retornapessoafisica();
            TfCodigo.setText("" + funcionario.getCodigo() + "");
            TfDtCadastro.setText(funcionario.getPessoafis().getPessoa().getDatacadastro());
            TfNomeFisica.setText(funcionario.getPessoafis().getNome());
            TfNrCPF.setText(funcionario.getPessoafis().getCpf());
            TfNrCPFKeyReleased(null);
            TfNrRG.setText(funcionario.getPessoafis().getRg());
            if (funcionario.getPessoafis().getSexo().equals("M")) {
                RbMasculino.setSelected(true);
            } else {
                RbFeminino.setSelected(true);
            }
            TfDtNasc.setText(funcionario.getPessoafis().getDatanasc());

            TfLogradouro.setText(funcionario.getPessoafis().getPessoa().getEndereco().getLogradouro());
            TfCEP.setText(funcionario.getPessoafis().getPessoa().getEndereco().getCep());
            TfBairro.setText(funcionario.getPessoafis().getPessoa().getEndereco().getBairro());
            TfNumero.setText(funcionario.getPessoafis().getPessoa().getEndereco().getNumero());
            CbEstado.setSelectedItem(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().getEstado());
            CbEstadoActionPerformed(evt);
            CbCidade.setSelectedItem(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getCidade());
            TabbedPaneFuncionario.setSelectedIndex(0);
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            msg.StatusBusca(LbNotificacao, "Dados do Funcionário carregados na tela...");
        }
    }//GEN-LAST:event_MnItRetornaActionPerformed

    private void TfNrCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyReleased
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(funcionario.getPessoafis().getCpf())) {
            if (!funcionario.getPessoafis().CPFnumerosiguais()) {
                if (funcionario.getPessoafis().CPFvalido()) {
                    LbCPFValido.setText("Válido");
                    LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/sucesso2.png")));
                } else {
                    LbCPFValido.setText("CPF Inválido");
                    LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
                }
            } else {
                LbCPFValido.setText("Números Iguais");
                LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
            }
        } else {
            LbCPFValido.setText("Espaços em Branco");
            LbCPFValido.setIcon(new ImageIcon(getClass().getResource("/br/com/lojadafatima/Icones/erro.png")));
        }
    }//GEN-LAST:event_TfNrCPFKeyReleased

    private void TfSalarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfSalarioKeyTyped
        valida.limitemaximo(evt, TfSalario.getText(), 13);
    }//GEN-LAST:event_TfSalarioKeyTyped

    private void TfComissaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfComissaoKeyTyped
        valida.limitemaximo(evt, TfComissao.getText(), 10);
    }//GEN-LAST:event_TfComissaoKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(PnBotoes.isVisible() && BtGravar.isEnabled()){
            if(JOptionPane.showConfirmDialog(null, "Você esta prestes a fechar esta janela.\nAo fechar esta janela tudo que você digitou será esquecido!", "Tem certeza que deseja fechar?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                dispose();
            }
        }else{
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void TfMaxDescontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfMaxDescontoKeyTyped
        valida.limitemaximo(evt, TfMaxDesconto.getText(), 10);
    }//GEN-LAST:event_TfMaxDescontoKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAlterar;
    private javax.swing.JButton BtCadCidade;
    private javax.swing.JButton BtCadEstado;
    private javax.swing.JButton BtCancelar;
    private javax.swing.JButton BtExcluir;
    private javax.swing.JButton BtGravar;
    private javax.swing.JButton BtIncluir;
    private javax.swing.JButton BtPesquisa;
    private javax.swing.JComboBox CbCidade;
    private javax.swing.JComboBox CbEstado;
    private javax.swing.JComboBox CbPesquisa;
    private javax.swing.JLabel LbCPFValido;
    private javax.swing.JLabel LbNotificacao;
    private javax.swing.JMenuItem MnItRetorna;
    private javax.swing.JPanel PnBotoes;
    private javax.swing.JPanel PnCadastro;
    private javax.swing.JPanel PnConsulta;
    private javax.swing.JPopupMenu PopupMenuRetorna;
    private javax.swing.JRadioButton RbFeminino;
    private javax.swing.JRadioButton RbMasculino;
    private javax.swing.JTabbedPane TabbedPaneFuncionario;
    private javax.swing.JTable TbEmail;
    private javax.swing.JTable TbPesquisa;
    private javax.swing.JTable TbTelefone;
    private javax.swing.JTextField TfBairro;
    private javax.swing.JFormattedTextField TfCEP;
    private javax.swing.JTextField TfCodigo;
    private JNumberField.JNumberField TfComissao;
    private javax.swing.JTextField TfDsEmail;
    private javax.swing.JFormattedTextField TfDtCadastro;
    private javax.swing.JFormattedTextField TfDtNasc;
    private javax.swing.JTextField TfFuncao;
    private javax.swing.JTextField TfLogradouro;
    private JNumberField.JNumberField TfMaxDesconto;
    private javax.swing.JTextField TfNomeFisica;
    private javax.swing.JFormattedTextField TfNrCPF;
    private javax.swing.JFormattedTextField TfNrRG;
    private javax.swing.JFormattedTextField TfNrTelefone;
    private javax.swing.JTextField TfNumero;
    private javax.swing.JTextField TfPesquisa;
    private JNumberField.JNumberField TfSalario;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtAddEmail;
    private javax.swing.JButton jBtAddTelefone;
    private javax.swing.JButton jBtDelEmail;
    private javax.swing.JButton jBtDelTelefone;
    private javax.swing.JComboBox jCbOpEmail;
    private javax.swing.JComboBox jCbOpTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    public void analisausuario(){
        getTelasusuario().getTela().setCodigo(3);
        if(!getTelasusuario().eadmintela()){
            PnBotoes.setVisible(false);
        }
        
        getTelasusuario().getTela().setCodigo(4);
        if(!getTelasusuario().eadmintela()){
            BtCadEstado.setVisible(false);
        }
        
        getTelasusuario().getTela().setCodigo(5);
        if(!getTelasusuario().eadmintela()){
            BtCadCidade.setVisible(false);
        }
    }
    
    public boolean camposobrigatoriospreenchidos() {

        if (!TfNomeFisica.getText().equals("")) {
        } else {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Nome do Funcionário e obrigatório");
            TfNomeFisica.grabFocus();
            return false;
        }

        if (LbCPFValido.getText().equals("Válido")) {
        } else {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao,  "Digite um CPF válido");
            TfNrCPF.grabFocus();
            return false;
        }
        if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
        } else {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite a Data de Nascimento");
            TfDtNasc.grabFocus();
            return false;
        }
        if (TfLogradouro.getText().equals("")) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite a Rua/Avenida que o funcionário mora!");
            TfLogradouro.grabFocus();
            return false;
        }
        if (TfNumero.getText().equals("")) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite o Número da residência do funcionário!");
            TfNumero.grabFocus();
            return false;
        }
        if (!valida.CampoTotalmentePreenchido(TfCEP.getText())) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite o CEP de onde o funcionário mora!");
            TfCEP.grabFocus();
            return false;
        }
        if (TfBairro.getText().equals("")) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite o Bairro de onde o funcionário mora!");
            TfBairro.grabFocus();
            return false;
        }
        if (TfFuncao.getText().equals("")) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite a Função que o funcionário tera!");
            TfFuncao.grabFocus();
            return false;
        }
        if (TfSalario.getValue() == BigDecimal.valueOf(0)) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Digite o Salário que o funcionário receberá!");
            TfSalario.grabFocus();
            return false;
        }
        if (CbEstado.getSelectedItem() == null) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Insira ou cadastre um Estado!");
            BtCadEstado.grabFocus();
            return false;
        }
        if (CbCidade.getSelectedItem() == null) {
            msg.CampoObrigatorioNaoPreenchido(LbNotificacao, "Insira ou cadastre uma Cidade!");
            BtCadCidade.grabFocus();
            return false;
        }
        return true;
    }

    public void enviardados() {
        funcionario.getPessoafis().getPessoa().setDatacadastro(TfDtCadastro.getText());
        funcionario.getPessoafis().getPessoa().setTipopessoa("F");
        funcionario.getPessoafis().setNome(TfNomeFisica.getText());
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        funcionario.getPessoafis().setRg(TfNrRG.getText());
        funcionario.getPessoafis().setDatanasc(TfDtNasc.getText());
        funcionario.setFuncao(TfFuncao.getText());
        funcionario.setComissao(Float.parseFloat(TfComissao.getValue().toString()));
        funcionario.setSalario(Float.parseFloat(TfSalario.getValue().toString()));
        funcionario.setMaxdesconto(Float.parseFloat(TfMaxDesconto.getValue().toString()));
        if (RbMasculino.isSelected()) {
            funcionario.getPessoafis().setSexo("M");
        }
        if (RbFeminino.isSelected()) {
            funcionario.getPessoafis().setSexo("F");
        }
        funcionario.getPessoafis().getPessoa().getEndereco().setLogradouro(TfLogradouro.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setNumero(TfNumero.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setBairro(TfBairro.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setCep(TfCEP.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setCodigo(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().retornacodigo());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().setCidade(CbCidade.getSelectedItem().toString());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().setCodigo(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().retornacodigo());
    }

    public java.awt.Frame getPrimeiratela() {
        return primeiratela;
    }

    public void setPrimeiratela(java.awt.Frame primeiratela) {
        this.primeiratela = primeiratela;
    }

    public ClasseTelasUsuario getTelasusuario() {
        return telasusuario;
    }

    public void setTelasusuario(ClasseTelasUsuario telasusuario) {
        this.telasusuario = telasusuario;
    }
}
