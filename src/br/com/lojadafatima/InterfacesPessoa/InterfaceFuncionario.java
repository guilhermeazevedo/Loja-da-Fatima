/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.lojadafatima.InterfacesPessoa;

import br.com.lojadafatima.ClassesFerramentas.ClasseDatas;
import br.com.lojadafatima.ClassesFerramentas.GerenciadorCamposBotoes;
import br.com.lojadafatima.ClassesFerramentas.LimpaCamposTela;
import br.com.lojadafatima.ClassesFerramentas.PermiteApenasNumeros;
import br.com.lojadafatima.ClassesFerramentas.PermiteNumerosPontoBarra;
import br.com.lojadafatima.ClassesFerramentas.Preenche;
import br.com.lojadafatima.Pessoa.ClasseFuncionario;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author hp
 */
public class InterfaceFuncionario extends javax.swing.JDialog {

    MaskFormatter data, rg, cpf, cep, fone, valor, comissao;
    private java.awt.Frame primeiratela;
    Preenche preenche = new Preenche();
    ClasseFuncionario funcionario = new ClasseFuncionario();
    GerenciadorCamposBotoes valida = new GerenciadorCamposBotoes();
    LimpaCamposTela limpar = new LimpaCamposTela();
    ClasseDatas datas = new ClasseDatas();

    public InterfaceFuncionario(java.awt.Frame telaorigem, boolean modal) {
        super(telaorigem, modal);
        setPrimeiratela(telaorigem);
        initComponents();
        TfNrCPFFocusLost(null);
        valida.validacamposCancelar(PnCadastro, PnBotoes);
        preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        PopupMenuRetorna = new javax.swing.JPopupMenu();
        MnItRetorna = new javax.swing.JMenuItem();
        TabbedPaneFuncionario = new javax.swing.JTabbedPane();
        PnCadastro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TfCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TfNomeFisica = new javax.swing.JTextField();
        try{
            cpf = new MaskFormatter("###.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrCPF = new JFormattedTextField(cpf);
        jLabel4 = new javax.swing.JLabel();
        try{
            rg = new MaskFormatter("##.###.###-##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrRG = new JFormattedTextField(rg);
        RbFeminino = new javax.swing.JRadioButton();
        RbMasculino = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtNasc = new JFormattedTextField(data);
        jSeparator1 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        try{
            fone = new MaskFormatter("(##)####-####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfNrTelefone = new JFormattedTextField(fone);
        jCbOpTelefone = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jBtAddTelefone = new javax.swing.JButton();
        jBtDelTelefone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbTelefone = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        TfDsEmail = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jCbOpEmail = new javax.swing.JComboBox();
        jBtAddEmail = new javax.swing.JButton();
        jBtDelEmail = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbEmail = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        TfLogradouro = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TfNumero = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TfBairro = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        CbEstado = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        CbCidade = new javax.swing.JComboBox();
        BtCadCidade = new javax.swing.JButton();
        BtCadEstado = new javax.swing.JButton();
        PnBotoes = new javax.swing.JPanel();
        BtGravar = new javax.swing.JButton();
        BtAlterar = new javax.swing.JButton();
        BtIncluir = new javax.swing.JButton();
        BtExcluir = new javax.swing.JButton();
        BtCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        TfFuncao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        try{
            valor = new MaskFormatter("####.##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel montar mascara no campo de Valor");
        }
        TfSalario = new JFormattedTextField(valor);
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        try{
            data = new MaskFormatter("##/##/####");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfDtCadastro = new JFormattedTextField(data);
        try{
            cep = new MaskFormatter("#####-###");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel localizar");
        }
        TfCEP = new JFormattedTextField(cep);
        jLabel16 = new javax.swing.JLabel();
        try{
            comissao = new MaskFormatter("##.##");
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Nao foi possivel montar mascara no campo de Valor");
        }
        TfComissao = new JFormattedTextField(comissao);
        jLabel19 = new javax.swing.JLabel();
        LbCPFValido = new javax.swing.JLabel();
        PnConsulta = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        CbPesquisa = new javax.swing.JComboBox();
        TfPesquisa = new javax.swing.JTextField();
        BtPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbPesquisa = new javax.swing.JTable();

        MnItRetorna.setText("Carregar dados");
        MnItRetorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItRetornaActionPerformed(evt);
            }
        });
        PopupMenuRetorna.add(MnItRetorna);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Funcionário - Software Loja da Fátima");
        setResizable(false);

        jLabel1.setText("Código");

        TfCodigo.setEditable(false);

        jLabel6.setText("Nº CPF*");

        TfNomeFisica.setName("NM_PESSOA"); // NOI18N
        TfNomeFisica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNomeFisicaKeyTyped(evt);
            }
        });

        TfNrCPF.setName("NR_CPF"); // NOI18N
        TfNrCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrCPFFocusLost(evt);
            }
        });
        TfNrCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNrCPFKeyTyped(evt);
            }
        });

        jLabel4.setText("Sexo*");

        TfNrRG.setName("NR_RG"); // NOI18N
        TfNrRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrRGFocusLost(evt);
            }
        });

        buttonGroup1.add(RbFeminino);
        RbFeminino.setText("Feminino");

        buttonGroup1.add(RbMasculino);
        RbMasculino.setSelected(true);
        RbMasculino.setText("Masculino");

        jLabel3.setText("Nome*");

        jLabel5.setText("Nº RG");

        jLabel15.setText("Data de Nascimento*");

        TfDtNasc.setName("DT_NASC"); // NOI18N
        TfDtNasc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfDtNascFocusLost(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel23.setText("Nr. Telefone:");

        TfNrTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfNrTelefoneFocusLost(evt);
            }
        });

        jCbOpTelefone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "CELULAR", "ALTERNATIVO" }));

        jLabel20.setText("Tipo");

        jBtAddTelefone.setText("Adicionar");
        jBtAddTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddTelefoneActionPerformed(evt);
            }
        });

        jBtDelTelefone.setText("Excluir");
        jBtDelTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelTelefoneActionPerformed(evt);
            }
        });

        TbTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Nr. Telefone", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbTelefone.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TbTelefone);

        jLabel24.setText("E-mail");

        TfDsEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfDsEmailKeyTyped(evt);
            }
        });

        jLabel25.setText("Tipo");

        jCbOpEmail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRINCIPAL", "ALTERNATIVO" }));

        jBtAddEmail.setText("Adicionar");
        jBtAddEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddEmailActionPerformed(evt);
            }
        });

        jBtDelEmail.setText("Excluir");
        jBtDelEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDelEmailActionPerformed(evt);
            }
        });

        TbEmail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "E-mail", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbEmail.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(TbEmail);

        jLabel10.setText("Rua/Avenida*");

        TfLogradouro.setName("DS_RUA"); // NOI18N
        TfLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfLogradouroKeyTyped(evt);
            }
        });

        jLabel11.setText("Numero*");

        TfNumero.setName("DS_NUMERO"); // NOI18N
        TfNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfNumeroKeyTyped(evt);
            }
        });

        jLabel13.setText("CEP*");

        jLabel12.setText("Bairro*");

        TfBairro.setName("DS_BAIRRO"); // NOI18N
        TfBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfBairroKeyTyped(evt);
            }
        });

        jLabel17.setText("Estado");

        CbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbEstadoActionPerformed(evt);
            }
        });

        jLabel18.setText("Cidade");

        BtCadCidade.setText("Adicionar Cidade");
        BtCadCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadCidadeActionPerformed(evt);
            }
        });

        BtCadEstado.setText("Adicionar Estado");
        BtCadEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCadEstadoActionPerformed(evt);
            }
        });

        BtGravar.setText("Gravar");
        BtGravar.setName("Gravar"); // NOI18N
        BtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGravarActionPerformed(evt);
            }
        });

        BtAlterar.setText("Alterar Dados");
        BtAlterar.setName("Alterar"); // NOI18N
        BtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAlterarActionPerformed(evt);
            }
        });

        BtIncluir.setText("Cadastrar Funcionário");
        BtIncluir.setName("Incluir"); // NOI18N
        BtIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtIncluirActionPerformed(evt);
            }
        });

        BtExcluir.setText("Excluir Funcionário");
        BtExcluir.setName("Excluir"); // NOI18N
        BtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcluirActionPerformed(evt);
            }
        });

        BtCancelar.setText("Cancelar");
        BtCancelar.setName("Cancelar"); // NOI18N
        BtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnBotoesLayout = new javax.swing.GroupLayout(PnBotoes);
        PnBotoes.setLayout(PnBotoesLayout);
        PnBotoesLayout.setHorizontalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnBotoesLayout.createSequentialGroup()
                .addComponent(BtIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(BtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtGravar, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PnBotoesLayout.setVerticalGroup(
            PnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
            .addComponent(BtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel7.setText("Função*");

        TfFuncao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TfFuncaoKeyTyped(evt);
            }
        });

        jLabel8.setText("Salário*");

        jLabel14.setText("R$");

        TfSalario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfSalarioFocusLost(evt);
            }
        });

        jLabel9.setText("Data do Cadastro");

        TfDtCadastro.setEditable(false);
        TfDtCadastro.setName("DT_NASC"); // NOI18N

        TfCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfCEPFocusLost(evt);
            }
        });

        jLabel16.setText("Comissão*");

        TfComissao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TfComissaoFocusLost(evt);
            }
        });

        jLabel19.setText("%");

        LbCPFValido.setText("Informa CPF Valido");

        javax.swing.GroupLayout PnCadastroLayout = new javax.swing.GroupLayout(PnCadastro);
        PnCadastro.setLayout(PnCadastroLayout);
        PnCadastroLayout.setHorizontalGroup(
            PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(PnCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(TfFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TfSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(38, 38, 38)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(TfComissao))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createSequentialGroup()
                                .addComponent(jBtDelTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCbOpEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createSequentialGroup()
                                        .addComponent(jBtAddEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtDelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(TfDsEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24)
                                .addComponent(jBtAddTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCbOpTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20)
                                .addComponent(TfNrTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PnBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TfLogradouro)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(66, 66, 66)
                                        .addComponent(jLabel9))
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addComponent(TfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TfDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel15)
                                    .addComponent(TfDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(TfNomeFisica, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TfBairro)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createSequentialGroup()
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnCadastroLayout.createSequentialGroup()
                                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(RbMasculino))
                                                .addGap(25, 25, 25))
                                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                                .addComponent(RbFeminino)
                                                .addGap(29, 29, 29)))
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LbCPFValido)
                                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(TfNrCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6))
                                                .addGap(30, 30, 30)
                                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(TfNrRG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel5))))
                                        .addGap(6, 6, 6)))
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel13)))
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel23))
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(TfCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(CbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtCadEstado)
                                .addGap(136, 136, 136)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(PnCadastroLayout.createSequentialGroup()
                                        .addComponent(CbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtCadCidade)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PnCadastroLayout.setVerticalGroup(
            PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TfDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfNomeFisica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(3, 3, 3)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RbMasculino)
                            .addComponent(TfNrRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TfNrCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RbFeminino)
                            .addComponent(LbCPFValido))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(1, 1, 1)
                        .addComponent(TfFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16))
                        .addGap(3, 3, 3)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(TfSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TfComissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(PnCadastroLayout.createSequentialGroup()
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfNrTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCbOpTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBtAddTelefone)
                                    .addComponent(jBtDelTelefone)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfDsEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCbOpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBtAddEmail)
                                    .addComponent(jBtDelEmail)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TfCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtCadEstado)
                    .addComponent(CbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtCadCidade))
                .addGap(18, 18, 18)
                .addComponent(PnBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        TabbedPaneFuncionario.addTab("Cadastro", PnCadastro);

        jLabel2.setText("Consulta por:");

        CbPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos os Funcionários", "Código", "Nome", "Função", "CPF" }));
        CbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbPesquisaActionPerformed(evt);
            }
        });

        TfPesquisa.setEnabled(false);

        BtPesquisa.setText("Pesquisar");
        BtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtPesquisaActionPerformed(evt);
            }
        });

        TbPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Função", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TbPesquisa.setComponentPopupMenu(PopupMenuRetorna);
        TbPesquisa.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TbPesquisa);
        if (TbPesquisa.getColumnModel().getColumnCount() > 0) {
            TbPesquisa.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout PnConsultaLayout = new javax.swing.GroupLayout(PnConsulta);
        PnConsulta.setLayout(PnConsultaLayout);
        PnConsultaLayout.setHorizontalGroup(
            PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(PnConsultaLayout.createSequentialGroup()
                        .addComponent(CbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addGroup(PnConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PnConsultaLayout.setVerticalGroup(
            PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPaneFuncionario.addTab("Consulta", PnConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneFuncionario)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtAddTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddTelefoneActionPerformed
        preenche.PreencheJTableEmailOuTelefone(TfNrTelefone, jCbOpTelefone, TbTelefone);
    }//GEN-LAST:event_jBtAddTelefoneActionPerformed

    private void jBtDelTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelTelefoneActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbTelefone);
    }//GEN-LAST:event_jBtDelTelefoneActionPerformed

    private void jBtAddEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddEmailActionPerformed
        preenche.PreencheJTableEmailOuTelefone(TfDsEmail, jCbOpEmail, TbEmail);
    }//GEN-LAST:event_jBtAddEmailActionPerformed

    private void jBtDelEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDelEmailActionPerformed
        preenche.RemoveDaJTableEmailOuTelefone(TbEmail);
    }//GEN-LAST:event_jBtDelEmailActionPerformed

    private void BtCadEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadEstadoActionPerformed
        final InterfaceEstado tela = new InterfaceEstado(getPrimeiratela(), true);
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
            }
        });
    }//GEN-LAST:event_BtCadEstadoActionPerformed

    private void BtCadCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCadCidadeActionPerformed
        final InterfaceCidade tela = new InterfaceCidade(getPrimeiratela(), true);
        tela.setVisible(true);
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                CbEstadoActionPerformed(null);
            }
        });
    }//GEN-LAST:event_BtCadCidadeActionPerformed

    private void CbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbEstadoActionPerformed
        if (CbEstado.getSelectedItem() == null) {
            preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        }
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        preenche.PreencheJComboBox(CbCidade, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().buscarcidadesporestado());
    }//GEN-LAST:event_CbEstadoActionPerformed

    private void TfNrCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrCPFFocusLost
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(funcionario.getPessoafis().getCpf())) {
            if (!funcionario.getPessoafis().CPFnumerosiguais()) {
                if (funcionario.getPessoafis().CPFvalido()) {
                    LbCPFValido.setText("Valido");
                    LbCPFValido.setForeground(Color.green);
                    if (funcionario.getPessoafis().CPFexistente()) {
                        if (funcionario.efuncionario()) {
                            if (!TfCodigo.getText().equals("") && (funcionario.getCodigo() == Integer.parseInt(TfCodigo.getText()))) {
                            } else if (funcionario.efuncionarioativo()) {
                                JOptionPane.showMessageDialog(null, "Este CPF pertence a um funcionario ja cadastrado no sistema!\n"
                                        + "Consulte os dados deste funcionario na aba \"Consulta\" e informe o codigo ao funcionario, caso ele tenha esquecido!", "CPF existente", JOptionPane.INFORMATION_MESSAGE);
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            } else {
                                int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + funcionario.getPessoafis().retornanomeporCPF() + ". "
                                        + "Os dados desta pessoa foram excluidas do sistema!\n\n"
                                        + "Deseja recuperar os dados desta pessoa?", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                                if (op == JOptionPane.YES_OPTION) {
                                    funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
                                    funcionario.getPessoafis().getPessoa().recuperar();
                                    JOptionPane.showMessageDialog(null, "Recuperacao realizada com sucesso!\nAs informacoes do funcionario permanecem iguais as que estavam cadastradas no momento da exclusao\n\n"
                                            + "Codigo: " + funcionario.getCodigo() + "\nNome: " + funcionario.getPessoafis().retornanomeporCPF(), "Recuperacao realizada com sucesso", JOptionPane.INFORMATION_MESSAGE);
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                } else {
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                }
                            }
                        } else {
                            int op = JOptionPane.showConfirmDialog(null, "Este CPF pertence a " + funcionario.getPessoafis().retornanomeporCPF() + ". "
                                    + "Os dados desta pessoa estao cadastrados no sistema!\n\n"
                                    + "Deseja importar os dados desta pessoa para criar um novo funcionario?\n"
                                    + "(Caso queira, o funcionario sera criado automaticamente com as informacoes contidas no sistema)", "O que deseja fazer?", JOptionPane.YES_NO_OPTION);
                            if (op == JOptionPane.YES_OPTION) {
                                if (TfFuncao.getText().equals("") || TfSalario.getText().equals("") || TfComissao.getText().equals("")) {
                                    JOptionPane.showMessageDialog(null, "Primeiro digite os dados especificos de funcionario, depois disso digite o CPF novamente!", "Campos obrigatorios", JOptionPane.INFORMATION_MESSAGE);
                                    TfNrCPF.setText("");
                                    TfNrCPFKeyReleased(null);
                                } else {
                                    funcionario.setFuncao(TfFuncao.getText());
                                    funcionario.setComissao(Float.parseFloat(TfComissao.getText()));
                                    funcionario.setSalario(Float.parseFloat(TfSalario.getText()));
                                    funcionario.importardadosnovofuncionario();
                                    JOptionPane.showMessageDialog(null, "Importacao dos dados realizada com sucesso!\n"
                                            + "Um novo funcionario esta gravado no sistema com as informacoes contidas no CPF da pessoa.\n"
                                            + "Caso deseja conferir ou alterar os dados do funcionario, faca a busca na aba \"Consulta\".\n\n"
                                            + "Codigo: " + funcionario.getCodigo() + "\nNome: " + funcionario.getPessoafis().retornanomeporCPF());
                                    limpar.Limpar(PnCadastro);
                                    limpar.Limpar(TbTelefone);
                                    limpar.Limpar(TbEmail);
                                    limpar.Limpar(TbPesquisa);
                                    TfNrCPFKeyReleased(null);
                                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                                }
                            } else {
                                TfNrCPF.setText("");
                                TfNrCPFKeyReleased(null);
                            }
                        }
                    }
                } else {
                    LbCPFValido.setText("CPF Invalido");
                    LbCPFValido.setForeground(Color.red);
                }
            } else {
                LbCPFValido.setText("Numeros Iguais");
                LbCPFValido.setForeground(Color.red);
            }
        } else {
            LbCPFValido.setText("Espaços em Branco");
            LbCPFValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCPFFocusLost

    private void TfNrRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrRGFocusLost
        valida.FocusLostDeCamposFormatados(TfNrRG);
    }//GEN-LAST:event_TfNrRGFocusLost

    private void TfDtNascFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfDtNascFocusLost
        if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
            if (datas.validadatas(TfDtNasc.getText())) {

            } else {
                TfDtNasc.setValue(null);
            }
        } else {
            if (datas.validadatas(TfDtNasc.getText())) {

            } else {
                TfDtNasc.setValue(null);
            }
        }
    }//GEN-LAST:event_TfDtNascFocusLost

    private void TfSalarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfSalarioFocusLost
        valida.FocusLostDeCamposFormatados(TfSalario);
    }//GEN-LAST:event_TfSalarioFocusLost

    private void TfNrTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfNrTelefoneFocusLost
        valida.FocusLostDeCamposFormatados(TfNrTelefone);
    }//GEN-LAST:event_TfNrTelefoneFocusLost

    private void TfCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfCEPFocusLost
        valida.FocusLostDeCamposFormatados(TfCEP);
    }//GEN-LAST:event_TfCEPFocusLost

    private void TfComissaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TfComissaoFocusLost
        valida.FocusLostDeCamposFormatados(TfComissao);
    }//GEN-LAST:event_TfComissaoFocusLost

    private void TfNomeFisicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNomeFisicaKeyTyped
        valida.limitemaximo(evt, TfNomeFisica.getText(), 80);
    }//GEN-LAST:event_TfNomeFisicaKeyTyped

    private void TfFuncaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfFuncaoKeyTyped
        valida.limitemaximo(evt, TfFuncao.getText(), 50);
    }//GEN-LAST:event_TfFuncaoKeyTyped

    private void TfDsEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfDsEmailKeyTyped
        valida.limitemaximo(evt, TfDsEmail.getText(), 60);
    }//GEN-LAST:event_TfDsEmailKeyTyped

    private void TfLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfLogradouroKeyTyped
        valida.limitemaximo(evt, TfLogradouro.getText(), 50);
    }//GEN-LAST:event_TfLogradouroKeyTyped

    private void TfNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNumeroKeyTyped
        valida.limitemaximo(evt, TfNumero.getText(), 10);
    }//GEN-LAST:event_TfNumeroKeyTyped

    private void TfBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfBairroKeyTyped
        valida.limitemaximo(evt, TfBairro.getText(), 30);
    }//GEN-LAST:event_TfBairroKeyTyped

    private void BtIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtIncluirActionPerformed
        valida.validacamposCadastrar(PnCadastro, PnBotoes);
        limpar.Limpar(PnCadastro);
        limpar.Limpar(TbTelefone);
        limpar.Limpar(TbEmail);
        preenche.PreencheJComboBox(CbEstado, funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().buscarestadosjcombobox());
        TfDtCadastro.setText(datas.retornaratartual());
        TfNrCPFKeyReleased(null);
    }//GEN-LAST:event_BtIncluirActionPerformed

    private void BtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAlterarActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Funcionario na Aba \"Consulta\" e selecione a opção \"Carregar Dados\" após selecionar e\nclicar com o botão direito sobre os dados do funcionario para que a opção de Alterar os Dados seja realizada!");
            TabbedPaneFuncionario.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            valida.validacamposCadastrar(PnCadastro, PnBotoes);
        }
    }//GEN-LAST:event_BtAlterarActionPerformed

    private void BtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcluirActionPerformed
        if (TfCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Busque por um Funcionario na Aba \"Consulta\" e selecione a opção \"Carregar Dados\" após selecionar e\nclicar com o botão direito sobre os dados do funcionario para que a opção de Excluir os Dados seja realizada!");
            TabbedPaneFuncionario.setSelectedIndex(1);
            CbPesquisa.grabFocus();
        } else {
            if (JOptionPane.showConfirmDialog(null, "Voce tem certeza que deseja EXCLUIR os dados deste Funcionario?", "Deseja excluir?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                funcionario.setCodigo(Integer.parseInt(TfCodigo.getText()));
                funcionario.excluir();
                limpar.Limpar(PnCadastro);
                limpar.Limpar(TbTelefone);
                limpar.Limpar(TbEmail);
                valida.validacamposCancelar(PnCadastro, PnBotoes);
                TfNrCPFKeyReleased(null);
                BtPesquisaActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_BtExcluirActionPerformed

    private void BtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Deseja realmente Cancelar esta operação?\n(TODOS os dados na tela serão limpos)", "Confirmar ação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpar.Limpar(PnCadastro);
            limpar.Limpar(TbTelefone);
            limpar.Limpar(TbEmail);
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            TfNrCPFKeyReleased(null);
        }
    }//GEN-LAST:event_BtCancelarActionPerformed

    private void TfNrCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyTyped
        TfNrCPFKeyReleased(evt);
    }//GEN-LAST:event_TfNrCPFKeyTyped

    private void BtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtPesquisaActionPerformed
        int[] parametro = new int[4];
        parametro[0] = 70;
        parametro[1] = 300;
        parametro[2] = 200;
        parametro[3] = 70;
        preenche.FormataJtable(TbPesquisa, parametro);

        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                preenche.PreencherJtable(TbPesquisa, funcionario.consultageral());
                break;
            }
            case 1: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o Codigo do funcionario que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.setCodigo(Integer.parseInt(TfPesquisa.getText()));
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultacodigo());
                }
                break;
            }
            case 2: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o Nome do funcionario que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.getPessoafis().setNome(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultanome());
                }
                break;
            }
            case 3: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite a funcao do funcionario que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.setFuncao(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultafuncao());
                }
                break;
            }
            case 4: {
                if (TfPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Digite o CPF do funcionario que deseja consultar!", "Digite o codigo", JOptionPane.INFORMATION_MESSAGE);
                    TfPesquisa.grabFocus();
                } else {
                    funcionario.getPessoafis().setCpf(TfPesquisa.getText());
                    preenche.PreencherJtable(TbPesquisa, funcionario.consultaCPF());
                }
                break;
            }
        }
    }//GEN-LAST:event_BtPesquisaActionPerformed

    private void BtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGravarActionPerformed
        if (camposobrigatoriospreenchidos()) {
            if (JOptionPane.showConfirmDialog(null, "Tem certeza que deseja realmente Gravar os dados deste funcionario?", "Confirmar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (TfCodigo.getText().equals("")) {
                    enviardados();
                    funcionario.incluir();
                    funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    JOptionPane.showMessageDialog(null, "Codigo: " + funcionario.getCodigo() + "\n"
                            + "Funcionario: " + funcionario.getPessoafis().getNome().toUpperCase(), "Informe o Codigo", JOptionPane.INFORMATION_MESSAGE);
                    for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getTelefone().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().incluir();
                    }
                    for (int i = 0; i < TbEmail.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getEmail().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().incluir();
                    }
                    limpar.Limpar(PnCadastro);
                    limpar.Limpar(TbTelefone);
                    limpar.Limpar(TbEmail);
                    TfNrCPFKeyReleased(null);
                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                } else {
                    funcionario.setCodigo(Integer.parseInt(TfCodigo.getText()));
                    funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
                    enviardados();
                    funcionario.alterar();
                    funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
                    funcionario.getPessoafis().getPessoa().getTelefone().deletartelefones();
                    funcionario.getPessoafis().getPessoa().getEmail().deletaremails();
                    for (int i = 0; i < TbTelefone.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getTelefone().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getTelefone().setNrtelefone(TbTelefone.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().setTipotelefone(TbTelefone.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getTelefone().incluir();
                    }
                    for (int i = 0; i < TbEmail.getRowCount(); i++) {
                        funcionario.getPessoafis().getPessoa().getEmail().setCodigo(i + 1);
                        funcionario.getPessoafis().getPessoa().getEmail().setEmail(TbEmail.getValueAt(i, 1).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().setTipoemail(TbEmail.getValueAt(i, 2).toString());
                        funcionario.getPessoafis().getPessoa().getEmail().incluir();
                    }
                    limpar.Limpar(PnCadastro);
                    limpar.Limpar(TbTelefone);
                    limpar.Limpar(TbEmail);
                    TfNrCPFKeyReleased(null);
                    valida.validacamposCancelar(PnCadastro, PnBotoes);
                }
            }
        }
    }//GEN-LAST:event_BtGravarActionPerformed

    private void CbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbPesquisaActionPerformed
        switch (CbPesquisa.getSelectedIndex()) {
            case 0: {
                TfPesquisa.setEnabled(false);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 1: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(new PermiteApenasNumeros());
                break;
            }
            case 2: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 3: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(TfNomeFisica.getDocument());
                break;
            }
            case 4: {
                TfPesquisa.setEnabled(true);
                TfPesquisa.setDocument(new PermiteNumerosPontoBarra());
                break;
            }
        }
    }//GEN-LAST:event_CbPesquisaActionPerformed

    private void MnItRetornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItRetornaActionPerformed
        if (TbPesquisa.getSelectedRow() != -1) {
            funcionario.setCodigo(Integer.parseInt(TbPesquisa.getValueAt(TbPesquisa.getSelectedRow(), 0).toString()));
            funcionario.getPessoafis().getPessoa().setCodigo(funcionario.retornacodigopessoafuncionario());
            funcionario.getPessoafis().getPessoa().getTelefone().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
            funcionario.getPessoafis().getPessoa().getEmail().setCodigopessoa(funcionario.getPessoafis().getPessoa().getCodigo());
            preenche.PreencheJtableSEL(TbTelefone, funcionario.getPessoafis().getPessoa().getTelefone().retornatelefonespessoa());
            preenche.PreencheJtableSEL(TbEmail, funcionario.getPessoafis().getPessoa().getEmail().retornaemailspessoa());
            valida.validacamposCancelar(PnCadastro, PnBotoes);
            limpar.Limpar(PnCadastro);
            funcionario.retornafuncionario();
            TfFuncao.setText(funcionario.getFuncao());
            TfSalario.setText(valida.AdaptaValores("" + funcionario.getSalario(), 4));
            TfComissao.setText(valida.AdaptaValores("" + funcionario.getComissao(), 2));
            funcionario.getPessoafis().retornapessoafisica();
            TfCodigo.setText("" + funcionario.getCodigo() + "");
            TfDtCadastro.setText(funcionario.getPessoafis().getPessoa().getDatacadastro());
            TfNomeFisica.setText(funcionario.getPessoafis().getNome());
            TfNrCPF.setText(funcionario.getPessoafis().getCpf());
            TfNrCPFKeyReleased(null);
            TfNrRG.setText(funcionario.getPessoafis().getRg());
            if (funcionario.getPessoafis().getSexo().equals("M")) {
                RbMasculino.setSelected(true);
            } else {
                RbFeminino.setSelected(true);
            }
            TfDtNasc.setText(funcionario.getPessoafis().getDatanasc());

            TfLogradouro.setText(funcionario.getPessoafis().getPessoa().getEndereco().getLogradouro());
            TfCEP.setText(funcionario.getPessoafis().getPessoa().getEndereco().getCep());
            TfBairro.setText(funcionario.getPessoafis().getPessoa().getEndereco().getBairro());
            TfNumero.setText(funcionario.getPessoafis().getPessoa().getEndereco().getNumero());
            CbEstado.setSelectedItem(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().getEstado());
            CbEstadoActionPerformed(evt);
            CbCidade.setSelectedItem(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getCidade());
            TabbedPaneFuncionario.setSelectedIndex(0);
            valida.validacamposCancelar(PnCadastro, PnBotoes);
        }
    }//GEN-LAST:event_MnItRetornaActionPerformed

    private void TfNrCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TfNrCPFKeyReleased
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        valida.FocusLostDeCamposFormatados(TfNrCPF);
        if (valida.CampoTotalmentePreenchido(funcionario.getPessoafis().getCpf())) {
            if (!funcionario.getPessoafis().CPFnumerosiguais()) {
                if (funcionario.getPessoafis().CPFvalido()) {
                    LbCPFValido.setText("Valido");
                    LbCPFValido.setForeground(Color.green);
                } else {
                    LbCPFValido.setText("CPF Invalido");
                    LbCPFValido.setForeground(Color.red);
                }
            } else {
                LbCPFValido.setText("Numeros Iguais");
                LbCPFValido.setForeground(Color.red);
            }
        } else {
            LbCPFValido.setText("Espaços em Branco");
            LbCPFValido.setForeground(Color.red);
        }
    }//GEN-LAST:event_TfNrCPFKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAlterar;
    private javax.swing.JButton BtCadCidade;
    private javax.swing.JButton BtCadEstado;
    private javax.swing.JButton BtCancelar;
    private javax.swing.JButton BtExcluir;
    private javax.swing.JButton BtGravar;
    private javax.swing.JButton BtIncluir;
    private javax.swing.JButton BtPesquisa;
    private javax.swing.JComboBox CbCidade;
    private javax.swing.JComboBox CbEstado;
    private javax.swing.JComboBox CbPesquisa;
    private javax.swing.JLabel LbCPFValido;
    private javax.swing.JMenuItem MnItRetorna;
    private javax.swing.JPanel PnBotoes;
    private javax.swing.JPanel PnCadastro;
    private javax.swing.JPanel PnConsulta;
    private javax.swing.JPopupMenu PopupMenuRetorna;
    private javax.swing.JRadioButton RbFeminino;
    private javax.swing.JRadioButton RbMasculino;
    private javax.swing.JTabbedPane TabbedPaneFuncionario;
    private javax.swing.JTable TbEmail;
    private javax.swing.JTable TbPesquisa;
    private javax.swing.JTable TbTelefone;
    private javax.swing.JTextField TfBairro;
    private javax.swing.JFormattedTextField TfCEP;
    private javax.swing.JTextField TfCodigo;
    private javax.swing.JFormattedTextField TfComissao;
    private javax.swing.JTextField TfDsEmail;
    private javax.swing.JFormattedTextField TfDtCadastro;
    private javax.swing.JFormattedTextField TfDtNasc;
    private javax.swing.JTextField TfFuncao;
    private javax.swing.JTextField TfLogradouro;
    private javax.swing.JTextField TfNomeFisica;
    private javax.swing.JFormattedTextField TfNrCPF;
    private javax.swing.JFormattedTextField TfNrRG;
    private javax.swing.JFormattedTextField TfNrTelefone;
    private javax.swing.JTextField TfNumero;
    private javax.swing.JTextField TfPesquisa;
    private javax.swing.JFormattedTextField TfSalario;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtAddEmail;
    private javax.swing.JButton jBtAddTelefone;
    private javax.swing.JButton jBtDelEmail;
    private javax.swing.JButton jBtDelTelefone;
    private javax.swing.JComboBox jCbOpEmail;
    private javax.swing.JComboBox jCbOpTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    public boolean camposobrigatoriospreenchidos() {

        if (!TfNomeFisica.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(null, "Nome do Funcionario e obrigatorio");
            TfNomeFisica.grabFocus();
            return false;
        }
        Color cor = LbCPFValido.getForeground();
        if (cor == Color.green) {
        } else {
            JOptionPane.showMessageDialog(null, "Digite um CPF valido");
            TfNrCPF.grabFocus();
            return false;
        }
        if (valida.CampoTotalmentePreenchido(TfDtNasc.getText())) {
        } else {
            JOptionPane.showMessageDialog(null, "Digite a Data de Nascimento");
            TfDtNasc.grabFocus();
            return false;
        }
        if (TfLogradouro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite a Rua/Avenida que o funcionario mora!");
            TfLogradouro.grabFocus();
            return false;
        }
        if (TfNumero.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o Numero da residencia do funcionario!");
            TfNumero.grabFocus();
            return false;
        }
        if (!valida.CampoTotalmentePreenchido(TfCEP.getText())) {
            JOptionPane.showMessageDialog(null, "Digite o CEP de onde o funcionario mora!");
            TfCEP.grabFocus();
            return false;
        }
        if (TfBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o Bairro de onde o funcionario mora!");
            TfBairro.grabFocus();
            return false;
        }
        if (TfFuncao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite a Funcao que o funcionario tera!");
            TfFuncao.grabFocus();
            return false;
        }
        if (TfComissao.getText().equals("  .  ")) {
            JOptionPane.showMessageDialog(null, "Digite a Comissao que o funcionario recebera!");
            TfComissao.grabFocus();
            return false;
        }

        if (!valida.CampoValorCorreto(TfComissao.getText())) {
            JOptionPane.showMessageDialog(null, "Digite a Comissao do funcionario corretamente!");
            TfComissao.grabFocus();
            return false;
        }
        if (TfSalario.getText().equals("    .  ")) {
            JOptionPane.showMessageDialog(null, "Digite o Salario que o funcionario recebera!");
            TfSalario.grabFocus();
            return false;
        }
        if (!valida.CampoValorCorreto(TfSalario.getText())) {
            JOptionPane.showMessageDialog(null, "Digite o Salario do funcionario corretamente!");
            TfSalario.grabFocus();
            return false;
        }
        if (CbEstado.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Insira ou cadastre um Estado!");
            BtCadEstado.grabFocus();
            return false;
        }
        if (CbCidade.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Insira ou cadastre uma Cidade!");
            BtCadCidade.grabFocus();
            return false;
        }
        return true;
    }

    public void enviardados() {
        funcionario.getPessoafis().getPessoa().setDatacadastro(TfDtCadastro.getText());
        funcionario.getPessoafis().getPessoa().setTipopessoa("F");
        funcionario.getPessoafis().setNome(TfNomeFisica.getText());
        funcionario.getPessoafis().setCpf(TfNrCPF.getText());
        funcionario.getPessoafis().setRg(TfNrRG.getText());
        funcionario.getPessoafis().setDatanasc(TfDtNasc.getText());
        funcionario.setFuncao(TfFuncao.getText());
        funcionario.setComissao(Float.parseFloat(TfComissao.getText()));
        funcionario.setSalario(Float.parseFloat(TfSalario.getText()));
        if (RbMasculino.isSelected()) {
            funcionario.getPessoafis().setSexo("M");
        }
        if (RbFeminino.isSelected()) {
            funcionario.getPessoafis().setSexo("F");
        }
        funcionario.getPessoafis().getPessoa().getEndereco().setLogradouro(TfLogradouro.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setNumero(TfNumero.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setBairro(TfBairro.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().setCep(TfCEP.getText());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setEstado(CbEstado.getSelectedItem().toString());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().setCodigo(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().getEstado().retornacodigo());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().setCidade(CbCidade.getSelectedItem().toString());
        funcionario.getPessoafis().getPessoa().getEndereco().getCidade().setCodigo(funcionario.getPessoafis().getPessoa().getEndereco().getCidade().retornacodigo());
    }

    public java.awt.Frame getPrimeiratela() {
        return primeiratela;
    }

    public void setPrimeiratela(java.awt.Frame primeiratela) {
        this.primeiratela = primeiratela;
    }
}
